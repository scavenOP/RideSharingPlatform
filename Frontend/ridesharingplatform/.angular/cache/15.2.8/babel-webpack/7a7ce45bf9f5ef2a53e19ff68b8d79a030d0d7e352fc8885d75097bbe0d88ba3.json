{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../addvehicle/api.service\";\nimport * as i3 from \"src/app/app.tokenservice\";\nexport class ApproveRejectVehicleComponent {\n  get vehicle() {\n    return this.vehicles[this.currentVehicleIndex];\n  }\n  constructor(router, route, apiService, tokenService) {\n    this.router = router;\n    this.route = route;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.vehicles = []; // Contains the list of pending vehicles\n    this.currentVehicleIndex = 0;\n  }\n  ngOnInit() {\n    this.pendingvehicles();\n  }\n  pendingvehicles() {\n    this.apiService.getPendingVehicles().subscribe(response => {\n      this.vehicles = response;\n      //console.log(this.tokenService.getToken());\n    });\n  }\n}\n\nApproveRejectVehicleComponent.ɵfac = function ApproveRejectVehicleComponent_Factory(t) {\n  return new (t || ApproveRejectVehicleComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VehicleApiService), i0.ɵɵdirectiveInject(i3.TokenService));\n};\nApproveRejectVehicleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApproveRejectVehicleComponent,\n  selectors: [[\"app-approve-reject-vehicle\"]],\n  decls: 2,\n  vars: 0,\n  template: function ApproveRejectVehicleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"approve-reject-vehicle works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,6BAA6B;EAIxC,IAAIC,OAAO;IACT,OAAO,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,mBAAmB,CAAC;EAChD;EAIAC,YAAoBC,MAAc,EAASC,KAAqB,EAAUC,UAA6B,EAASC,YAA0B;IAAtH,WAAM,GAANH,MAAM;IAAiB,UAAK,GAALC,KAAK;IAA0B,eAAU,GAAVC,UAAU;IAA4B,iBAAY,GAAZC,YAAY;IAT5H,aAAQ,GAAc,EAAE,CAAC,CAAC;IAC1B,wBAAmB,GAAG,CAAC;EAQqH;EAE5IC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EAExB;EAEAA,eAAe;IACb,IAAI,CAACH,UAAU,CAACI,kBAAkB,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;MAGjE,IAAI,CAACX,QAAQ,GAAGW,QAAQ;MAExB;IAEF,CAAC,CAAC;EACJ;;;AA1BWb,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCX1CC,yBAAG;MAAAA,6CAA6B;MAAAA,iBAAI","names":["ApproveRejectVehicleComponent","vehicle","vehicles","currentVehicleIndex","constructor","router","route","apiService","tokenService","ngOnInit","pendingvehicles","getPendingVehicles","subscribe","response","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\VehicleManagement\\approve-reject-vehicle\\approve-reject-vehicle.component.ts","C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\VehicleManagement\\approve-reject-vehicle\\approve-reject-vehicle.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VehicleApiService } from '../addvehicle/api.service';\nimport { TokenService } from 'src/app/app.tokenservice';\nimport { Vehicle } from '../models/model.vehicle';\n\n@Component({\n  selector: 'app-approve-reject-vehicle',\n  templateUrl: './approve-reject-vehicle.component.html',\n  styleUrls: ['./approve-reject-vehicle.component.scss']\n})\nexport class ApproveRejectVehicleComponent implements OnInit {\n  vehicles: Vehicle[] = []; // Contains the list of pending vehicles\n  currentVehicleIndex = 0;\n\n  get vehicle(): Vehicle | undefined {\n    return this.vehicles[this.currentVehicleIndex];\n  }\n\n\n\n  constructor(private router: Router,private route: ActivatedRoute, private apiService: VehicleApiService,private tokenService: TokenService){}\n\n  ngOnInit(): void {\n    this.pendingvehicles();\n\n  }\n\n  pendingvehicles(): void {\n    this.apiService.getPendingVehicles().subscribe((response: any[]) => {\n\n\n      this.vehicles = response;\n      \n      //console.log(this.tokenService.getToken());\n\n    });\n  }\n\n}\n","<p>approve-reject-vehicle works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}