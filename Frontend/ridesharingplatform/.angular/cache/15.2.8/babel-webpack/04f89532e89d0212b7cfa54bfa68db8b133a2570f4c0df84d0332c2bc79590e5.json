{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../RideApi.service\";\nimport * as i3 from \"src/app/app.tokenservice\";\nimport * as i4 from \"@angular/common\";\nfunction ScheduleRideComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n    i0.ɵɵtext(4, \"Loading....\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ScheduleRideComponent_div_0_div_2_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const distance_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", distance_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" From \", distance_r4.from, \" to \", distance_r4.to, \" \");\n  }\n}\nfunction ScheduleRideComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 4);\n    i0.ɵɵtext(2, \"New Application\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function ScheduleRideComponent_div_0_div_2_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"label\", 7);\n    i0.ɵɵtext(6, \"Company:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"select\", 8)(8, \"option\", 9);\n    i0.ɵɵtext(9, \"Select a company\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ScheduleRideComponent_div_0_div_2_option_10_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.newride);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.distances);\n  }\n}\nfunction ScheduleRideComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleRideComponent_div_0_div_1_Template, 5, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, ScheduleRideComponent_div_0_div_2_Template, 11, 2, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoading);\n  }\n}\nexport class ScheduleRideComponent {\n  constructor(formBuilder, apiService, tokenService) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.distances = [];\n    this.isLoading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    {\n      this.apiService.getdistances().subscribe(response => {\n        this.distances = response;\n        //console.log(this.tokenService.getToken());\n      });\n\n      this.newride = new FormGroup({\n        rideFrom: new FormControl('', Validators.required),\n        rideTo: new FormControl('', Validators.required),\n        rideStartsOn: new FormControl(new Date(), Validators.required),\n        rideTime: new FormControl(Validators.required),\n        vehicleRegistrationNo: new FormControl('', Validators.required),\n        motoristUserId: new FormControl(this.tokenService.getid(), Validators.required),\n        noOfSeatsAvailable: new FormControl(Validators.required)\n      });\n    }\n    this.isLoading = false;\n  }\n  onSubmit() {}\n}\nScheduleRideComponent.ɵfac = function ScheduleRideComponent_Factory(t) {\n  return new (t || ScheduleRideComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.TokenService));\n};\nScheduleRideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleRideComponent,\n  selectors: [[\"app-schedule-ride\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", 2, \"height\", \"100vh\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [1, \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"company\"], [\"id\", \"company\", \"formControlName\", \"companyId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function ScheduleRideComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ScheduleRideComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAsBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICD5EC,2BAAuB;IAGmBA,2BAAW;IAAAA,iBAAO;;;;;IAa5CA,kCAAiE;IAACA,YAA6C;IAAAA,iBAAS;;;;IAA7EA,sCAAqB;IAAEA,eAA6C;IAA7CA,8EAA6C;;;;;;IAR/HA,2BAAwB;IACSA,+BAAe;IAAAA,iBAAK;IAEjDA,+BAAoD;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IAC/CA,8BAAwB;IACCA,wBAAQ;IAAAA,iBAAQ;IACrCA,iCAAsE;IACjDA,gCAAgB;IAAAA,iBAAS;IAC1CA,2FAAwH;IAC5HA,iBAAS;;;;IANXA,eAAqB;IAArBA,0CAAqB;IAKcA,eAAY;IAAZA,0CAAY;;;;;IAjB7DA,2BAAwB;IACpBA,4EAOM;IACNA,6EAaM;IACVA,iBAAM;;;;IAtBIA,eAAe;IAAfA,uCAAe;IAQfA,eAAgB;IAAhBA,wCAAgB;;;ADC1B,OAAM,MAAOC,qBAAqB;EAQhCC,YAAoBC,WAAwB,EAASC,UAAqB,EAASC,YAAyB;IAAxF,gBAAW,GAAXF,WAAW;IAAsB,eAAU,GAAVC,UAAU;IAAoB,iBAAY,GAAZC,YAAY;IAN/F,cAAS,GAAS,EAAE;IACpB,cAAS,GAAS,KAAK;IAEvB,cAAS,GAAS,KAAK;EAGuF;EAE9GC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI;IACvB;MACI,IAAI,CAACH,UAAU,CAACI,YAAY,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;QAG3D,IAAI,CAACC,SAAS,GAAGD,QAAQ;QAEzB;MAEF,CAAC,CAAC;;MAEF,IAAI,CAACE,OAAO,GAAE,IAAId,SAAS,CAAC;QAC1Be,QAAQ,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACe,QAAQ,CAAC;QACjDC,MAAM,EAAC,IAAIlB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACe,QAAQ,CAAC;QAC9CE,YAAY,EAAC,IAAInB,WAAW,CAAC,IAAIoB,IAAI,EAAE,EAAClB,UAAU,CAACe,QAAQ,CAAC;QAC5DI,QAAQ,EAAC,IAAIrB,WAAW,CAACE,UAAU,CAACe,QAAQ,CAAC;QAC7CK,qBAAqB,EAAC,IAAItB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACe,QAAQ,CAAC;QAC7DM,cAAc,EAAC,IAAIvB,WAAW,CAAC,IAAI,CAACQ,YAAY,CAACgB,KAAK,EAAE,EAACtB,UAAU,CAACe,QAAQ,CAAC;QAC7EQ,kBAAkB,EAAC,IAAIzB,WAAW,CAACE,UAAU,CAACe,QAAQ;OAIvD,CAAC;;IAEF,IAAI,CAACP,SAAS,GAAC,KAAK;EACtB;EAEAgB,QAAQ,IAAI;;AAtCDtB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlC5B,sEAuBM;;;MAvBAA,qCAAgB","names":["FormControl","FormGroup","Validators","i0","ScheduleRideComponent","constructor","formBuilder","apiService","tokenService","ngOnInit","isLoading","getdistances","subscribe","response","distances","newride","rideFrom","required","rideTo","rideStartsOn","Date","rideTime","vehicleRegistrationNo","motoristUserId","getid","noOfSeatsAvailable","onSubmit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.ts","C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../RideApi.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TokenService } from 'src/app/app.tokenservice';\n\n@Component({\n  selector: 'app-schedule-ride',\n  templateUrl: './schedule-ride.component.html',\n  styleUrls: ['./schedule-ride.component.scss']\n})\nexport class ScheduleRideComponent implements OnInit{\n\n  distances:any[] = [];\n  isLoading:boolean=false;\n  newride: FormGroup ;\n  submitted:boolean=false;\n\n\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,private tokenService:TokenService){}\n\n  ngOnInit(): void {\n    this.isLoading=true;\n{\n    this.apiService.getdistances().subscribe((response: any[]) => {\n    \n      \n      this.distances = response;\n      \n      //console.log(this.tokenService.getToken());\n      \n    });\n\n    this.newride= new FormGroup({\n      rideFrom :new FormControl('',Validators.required),\n      rideTo:new FormControl('',Validators.required),\n      rideStartsOn:new FormControl(new Date(),Validators.required),\n      rideTime:new FormControl(Validators.required),\n      vehicleRegistrationNo:new FormControl('',Validators.required),\n      motoristUserId:new FormControl(this.tokenService.getid(),Validators.required),\n      noOfSeatsAvailable:new FormControl(Validators.required)\n\n\n\n    });\n    }\n    this.isLoading=false;\n  }\n\n  onSubmit() {}\n\n  \n\n}\n","<div *ngIf=\"!submitted\">\n    <div *ngIf=\"isLoading\">\n        <div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading....</span>\n\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!isLoading\">\n        <h2 class=\"text-center mb-4\">New Application</h2>\n        <!-- <div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">{{ errorMessage }}</div> -->\n        <form [formGroup]=\"newride\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"company\">Company:</label>\n                <select class=\"form-control\" id=\"company\" formControlName=\"companyId\">\n                    <option value=\"\">Select a company</option>\n                    <option *ngFor=\"let distance of distances\" [value]=\"distance.id\"> From {{ distance.from }} to {{ distance.to}} </option>\n                </select>\n\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}