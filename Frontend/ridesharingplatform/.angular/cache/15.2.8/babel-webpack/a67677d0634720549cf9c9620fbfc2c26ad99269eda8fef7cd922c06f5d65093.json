{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../addvehicle/api.service\";\nimport * as i3 from \"src/app/app.tokenservice\";\n//import { Vehicle } from './vehicle';\nexport class MyVehicleComponent {\n  constructor(router, route, apiService, tokenService) {\n    this.router = router;\n    this.route = route;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.uservehicle = null;\n  }\n  ngOnInit() {\n    this.userid = this.tokenService.getid();\n    this.getvehicleByUserID(this.userid);\n  }\n  getvehicleByUserID(userId) {\n    this.apiService.getVehiclebuUser(userId).subscribe(vehicle => {\n      this.uservehicle = vehicle;\n      //     \n    }, error => {\n      console.log(error);\n    });\n  }\n}\nMyVehicleComponent.ɵfac = function MyVehicleComponent_Factory(t) {\n  return new (t || MyVehicleComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VehicleApiService), i0.ɵɵdirectiveInject(i3.TokenService));\n};\nMyVehicleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyVehicleComponent,\n  selectors: [[\"app-my-vehicle\"]],\n  decls: 3,\n  vars: 1,\n  template: function MyVehicleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"my-vehicle works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.uservehicle.registrationNo, \"\\n\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAKA;AAOA,OAAM,MAAOA,kBAAkB;EAK7BC,YAAoBC,MAAc,EAASC,KAAqB,EAAUC,UAA6B,EAASC,YAA0B;IAAtH,WAAM,GAANH,MAAM;IAAiB,UAAK,GAALC,KAAK;IAA0B,eAAU,GAAVC,UAAU;IAA4B,iBAAY,GAAZC,YAAY;IAH5H,gBAAW,GAAU,IAAI;EAGmH;EAE5IC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAC,IAAI,CAACF,YAAY,CAACG,KAAK,EAAE;IAErC,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACF,MAAM,CAAC;EAEtC;EAEAE,kBAAkB,CAACC,MAAc;IAC/B,IAAI,CAACN,UAAU,CAACO,gBAAgB,CAACD,MAAM,CAAC,CAACE,SAAS,CAC/CC,OAAe,IAAI;MAClB,IAAI,CAACC,WAAW,GAAED,OAAO;MAC7B;IACE,CAAC,EACAE,KAAS,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EAEN;;AAxBWf,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAkB;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BC,yBAAG;MAAAA,iCAAiB;MAAAA,iBAAI;MACxBA,YACA;;;MADAA,eACA;MADAA,iEACA","names":["MyVehicleComponent","constructor","router","route","apiService","tokenService","ngOnInit","userid","getid","getvehicleByUserID","userId","getVehiclebuUser","subscribe","vehicle","uservehicle","error","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\VehicleManagement\\my-vehicle\\my-vehicle.component.ts","C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\VehicleManagement\\my-vehicle\\my-vehicle.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Vehicle } from '../models/model.vehicle';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VehicleApiService } from '../addvehicle/api.service';\nimport { TokenService } from 'src/app/app.tokenservice';\n//import { Vehicle } from './vehicle';\n\n@Component({\n  selector: 'app-my-vehicle',\n  templateUrl: './my-vehicle.component.html',\n  styleUrls: ['./my-vehicle.component.scss']\n})\nexport class MyVehicleComponent implements OnInit{\n\n  uservehicle:Vehicle =null;\n  userid:string;\n\n  constructor(private router: Router,private route: ActivatedRoute, private apiService: VehicleApiService,private tokenService: TokenService){}\n\n  ngOnInit(): void {\n    this.userid=this.tokenService.getid();\n\n    this.getvehicleByUserID(this.userid);\n\n  }\n\n  getvehicleByUserID(userId: string): void{\n    this.apiService.getVehiclebuUser(userId).subscribe(\n      (vehicle:Vehicle) => {\n        this.uservehicle =vehicle;\n    //     \n      },\n      (error:any) => {\n        console.log(error);\n      });\n    \n  }\n\n}\n","<p>my-vehicle works!</p>\n{{ uservehicle.registrationNo}}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}