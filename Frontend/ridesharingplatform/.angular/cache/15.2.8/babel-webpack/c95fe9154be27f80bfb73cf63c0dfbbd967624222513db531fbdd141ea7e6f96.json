{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction NewapplicationComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const company_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", company_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(company_r2);\n  }\n}\nexport class NewapplicationComponent {\n  constructor(formBuilder, dataService, router) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    // applicationForm!: FormGroup ;\n    this.companyList = [];\n    this.roleList = [{\n      name: 'Motorist',\n      value: 'MOTORIST'\n    }, {\n      name: 'Rider',\n      value: 'RIDER'\n    }];\n  }\n  ngOnInit() {\n    // Initialize the form with required fields and validators\n    // this.applicationForm =new FormGroup({\n    //   name: new FormControl(),\n    //   password: new FormControl(),\n    //   email: new FormControl(),\n    //   phoneNumber: new FormControl(),\n    //   designation: new FormControl(),\n    //   roleid: new FormControl(),\n    //   employeeid: new FormControl(),\n    //   aadharnummber : new FormControl(),\n    //   licenseNumber:new FormControl(),\n    //   company: new FormControl()\n    // });\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe(response => {\n      this.companyList = response.map(company => company.companyName);\n    });\n  }\n  // Handler for form submission\n  onSubmit(form) {\n    // Check if the form is valid\n    // if (this.applicationForm.invalid) {\n    //   return;\n    // }\n    // // Send the application data to the API\n    // this.dataService.createApplication(this.applicationForm.value).subscribe((response: any) => {\n    //   // Redirect to acknowledgement page\n    //   this.router.navigateByUrl('/acknowledgement');\n    //});\n    console.log(form.value.username);\n  }\n}\nNewapplicationComponent.ɵfac = function NewapplicationComponent_Factory(t) {\n  return new (t || NewapplicationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n};\nNewapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewapplicationComponent,\n  selectors: [[\"app-newapplication\"]],\n  decls: 43,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"ngModel\", \"\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"officialmail\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"ngModel\", \"\", \"name\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"role\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"1\", \"ngModel\", \"\", \"name\", \"roleid\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"2\", \"ngModel\", \"\", \"name\", \"roleid\"], [\"for\", \"company\"], [\"id\", \"company\", \"ngModel\", \"\", \"name\", \"company\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"licenseNumber\"], [\"type\", \"text\", \"id\", \"licenseNumber\", \"ngModel\", \"\", \"name\", \"licenseNumber\", 1, \"form-control\"], [\"for\", \"vehicleType\"], [\"type\", \"text\", \"id\", \"vehicleType\", \"ngModel\", \"\", \"name\", \"vehicletype\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function NewapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"New Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function NewapplicationComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\");\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵtext(22, \" Motorist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"label\");\n      i0.ɵɵelement(24, \"input\", 11);\n      i0.ɵɵtext(25, \" Rider\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 12);\n      i0.ɵɵtext(28, \"Company:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"select\", 13)(30, \"option\", 14);\n      i0.ɵɵtext(31, \"Select a company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, NewapplicationComponent_option_32_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 2)(34, \"label\", 16);\n      i0.ɵɵtext(35, \"License Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 2)(38, \"label\", 18);\n      i0.ɵɵtext(39, \"Vehicle Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 20);\n      i0.ɵɵtext(42, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(32);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companyList);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAqCMA,kCAA8D;IAAAA,YAAa;IAAAA,iBAAS;;;;IAAxCA,kCAAiB;IAACA,eAAa;IAAbA,gCAAa;;;ACzBjF,OAAM,MAAOC,uBAAuB;EASlCC,YACUC,WAAwB,EACxBC,WAAuB,EACvBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAVhB;IACA,gBAAW,GAAQ,EAAE;IACrB,aAAQ,GAAU,CAChB;MAAEC,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAU,CAAE,EACvC;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE,CAClC;EAMG;EAEJC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;MAG5D,IAAI,CAACC,WAAW,GAAGD,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,WAAW,CAAC;IAEjE,CAAC,CAAC;EACJ;EAEA;EACAC,QAAQ,CAACC,IAAY;IACnB;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACV,KAAK,CAACa,QAAQ,CAAC;EAElC;;AAtDWnB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDZpCzB,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MAExBA,kCAA2C;MAArCA;QAAAA;QAAA;QAAA,OAAYA,gCAAW;MAAA,EAAC;MAC5BA,8BAAwB;MACJA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAmF;MAErFA,iBAAM;MACNA,8BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,4BAA0F;MAE5FA,iBAAM;MACNA,+BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,4BAA8E;MAUhFA,iBAAM;MACNA,+BAAwB;MACJA,sBAAK;MAAAA,iBAAQ;MAC/BA,4BAAK;MACIA,6BAA+D;MAACA,0BAAQ;MAAAA,iBAAQ;MACvFA,8BAAO;MAAAA,6BAA+D;MAACA,uBAAK;MAAAA,iBAAQ;MAGxFA,+BAAwB;MACDA,yBAAQ;MAAAA,iBAAQ;MACrCA,mCAAkE;MAC/CA,iCAAgB;MAAAA,iBAAS;MAC1CA,iFAAoF;MACtFA,iBAAS;MAQXA,+BAAwB;MACKA,gCAAe;MAAAA,iBAAQ;MAClDA,6BAAyF;MAC7FA,iBAAM;MACNA,+BAAyB;MACIA,8BAAa;MAAAA,iBAAQ;MAC9CA,6BAAqF;MAOvFA,iBAAM;MACNA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAvB7BA,gBAAc;MAAdA,yCAAc","names":["i0","NewapplicationComponent","constructor","formBuilder","dataService","router","name","value","ngOnInit","getCompanies","subscribe","response","companyList","map","company","companyName","onSubmit","form","console","log","username","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.html","D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.ts"],"sourcesContent":["<h2>New Application</h2>\n<!-- <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div> -->\n<form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" ngModel name=\"username\" required>\n    \n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" class=\"form-control\" id=\"email\"  ngModel name=\"officialmail\" required>\n    \n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Phone:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"phone\"  ngModel name=\"phoneNumber\">\n    <!-- <div *ngIf=\"applicationForm.get('phone').invalid && (applicationForm.get('phone').dirty || applicationForm.get('phone').touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"applicationForm.get('phone').errors.required\">\n        Phone is required.\n      </div>\n      <div *ngIf=\"applicationForm.get('phone').errors.pattern\">\n        Please enter a valid phone number.\n      </div>\n    </div> -->\n  </div>\n  <div class=\"form-group\">\n    <label for=\"role\">Role:</label>\n    <div>\n      <label><input type=\"radio\" name=\"role\" value=1  ngModel name=\"roleid\"> Motorist</label>\n      <label><input type=\"radio\" name=\"role\" value=2  ngModel name=\"roleid\"> Rider</label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company:</label>\n    <select class=\"form-control\" id=\"company\"  ngModel name=\"company\">\n      <option value=\"\">Select a company</option>\n      <option *ngFor=\"let company of companyList\" [value]=\"company\">{{ company }}</option>\n    </select>\n    <!-- <div *ngIf=\"applicationForm.get('company').invalid && (applicationForm.get('company').dirty || applicationForm.get('company').touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"applicationForm.get('company').errors.required\">\n        Company is required.\n      </div>\n    </div> -->\n  </div>\n  <div class=\"form-group\">\n    <label for=\"licenseNumber\">License Number:</label>\n    <input type=\"text\" class=\"form-control\" id=\"licenseNumber\"  ngModel name=\"licenseNumber\">\n</div>\n<div class=\"form-group\" >\n    <label for=\"vehicleType\">Vehicle Type:</label>\n    <input type=\"text\" class=\"form-control\" id=\"vehicleType\"  ngModel name=\"vehicletype\">\n    <!-- <div *ngIf=\"applicationForm.get('vehicleType').invalid && (applicationForm.get('vehicleType').dirty || applicationForm.get('vehicleType').touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"applicationForm.get('vehicleType').errors.required\">\n        Vehicle type is required.\n      </div>\n    </div> -->\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n    \n","\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,FormControl, Validators, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-newapplication',\n  templateUrl: './newapplication.component.html',\n  styleUrls: ['./newapplication.component.scss']\n})\nexport class NewapplicationComponent implements OnInit {\n\n  // applicationForm!: FormGroup ;\n  companyList: any[]=[];\n  roleList: any[] = [\n    { name: 'Motorist', value: 'MOTORIST' },\n    { name: 'Rider', value: 'RIDER' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: ApiService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    // Initialize the form with required fields and validators\n    // this.applicationForm =new FormGroup({\n    //   name: new FormControl(),\n    //   password: new FormControl(),\n    //   email: new FormControl(),\n    //   phoneNumber: new FormControl(),\n    //   designation: new FormControl(),\n    //   roleid: new FormControl(),\n    //   employeeid: new FormControl(),\n    //   aadharnummber : new FormControl(),\n\n    //   licenseNumber:new FormControl(),\n    //   company: new FormControl()\n    // });\n\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe((response: any[]) => {\n    \n      \n      this.companyList = response.map(company => company.companyName);\n      \n    });\n  }\n\n  // Handler for form submission\n  onSubmit(form: NgForm) {\n    // Check if the form is valid\n    // if (this.applicationForm.invalid) {\n    //   return;\n    // }\n\n    // // Send the application data to the API\n    // this.dataService.createApplication(this.applicationForm.value).subscribe((response: any) => {\n    //   // Redirect to acknowledgement page\n    //   this.router.navigateByUrl('/acknowledgement');\n    //});\n    console.log(form.value.username)\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}