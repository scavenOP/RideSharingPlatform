{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokenService {\n  constructor() {\n    this.islogedin = false;\n  }\n  // ...\n  setname(value) {\n    localStorage.setItem(\"name\", value);\n  }\n  getname() {\n    return localStorage.getItem(\"name\");\n  }\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  setRole(role) {\n    localStorage.setItem(\"role\", role);\n  }\n  getRole() {\n    return localStorage.getItem(\"role\");\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"role\");\n  }\n}\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\nTokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenService,\n  factory: TokenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,YAAY;EAHzBC;IAOI,cAAS,GAAW,KAAK;;EAIzB;EAEAC,OAAO,CAACC,KAAoB;IAC1BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACF,KAAK,CAAC;EACpC;EAEAG,OAAO;IACL,OAAOF,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;EACrC;EACOC,QAAQ,CAACC,KAAa;IAC3BL,YAAY,CAACC,OAAO,CAAC,OAAO,EAACI,KAAK,CAAC;EACvC;EAEAC,QAAQ;IACN,OAAON,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAI,OAAO,CAACC,IAAY;IAClBR,YAAY,CAACC,OAAO,CAAC,MAAM,EAACO,IAAI,CAAC;EACnC;EAEAC,OAAO;IACL,OAAOT,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;EACrC;EAEAO,MAAM;IACJV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;IAC/BX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EACjC;;AArCWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["TokenService","constructor","setname","value","localStorage","setItem","getname","getItem","setToken","token","getToken","setRole","role","getRole","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\RideSharingPlatform\\RideSharingPlatform-main\\Frontend\\ridesharingplatform\\src\\app\\app.tokenservice.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n     _token: string;\n     _name: string;\n     _role:string;\n    islogedin: boolean =false;\n\n    \n  \n    // ...\n  \n    setname(value: string | null) {\n      localStorage.setItem(\"name\",value);\n    }\n  \n    getname(){\n      return localStorage.getItem(\"name\");\n    }\n    public setToken(token: string) {\n      localStorage.setItem(\"token\",token);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  setRole(role: string) {\n    localStorage.setItem(\"role\",role);\n  }\n\n  getRole() {\n    return localStorage.getItem(\"role\");\n  }\n\n  logout(): void{\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"role\");\n  }\n  \n    // ...\n  }\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}