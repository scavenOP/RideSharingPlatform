// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RideSharingPlatform.Context;

#nullable disable

namespace RideSharingPlatform.Migrations
{
    [DbContext(typeof(RideDbContext))]
    partial class RideDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RideSharingPlatform.Authentication.Models.AuthUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "amit@cts.com",
                            Password = "Amit@123",
                            Phone = "92123456789",
                            RoleId = 3,
                            UserName = "Amit Sau"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.IncidentManagement.Models.Incident", b =>
                {
                    b.Property<string>("IncidentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IncidentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncidentReportedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncidentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestigatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResolutionETA")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentID");

                    b.HasIndex("IncidentTypeId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.IncidentManagement.Models.IncidentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExpectedSLAInDays")
                        .HasColumnType("int");

                    b.Property<string>("Types")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpectedSLAInDays = 1,
                            Types = "Accident"
                        },
                        new
                        {
                            Id = 2,
                            ExpectedSLAInDays = 2,
                            Types = "Theft"
                        },
                        new
                        {
                            Id = 3,
                            ExpectedSLAInDays = 1,
                            Types = "Driver Misbehave"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.IncidentManagement.Models.InvestigationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentsIncidentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("InverstigationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Suggestions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentsIncidentId");

                    b.ToTable("InvestigationDetails");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityHelpDeskNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityInChargeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingName = "Unitech",
                            CompanyName = "Cognizant",
                            SecurityHelpDeskNumber = "92123456789",
                            SecurityInChargeName = "Amit Sau"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.DrivingLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AlowedVehicles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RTA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DrivingLicenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlowedVehicles = "Bike",
                            ExpirationDate = new DateTime(2023, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNo = "FER6578HYU",
                            RTA = "Beltala",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Motorist"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rider"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SecurityHead"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.UserApplication", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("AadharNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserApplications");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AadharNumber = "786556784567",
                            ApplicationStatus = "New",
                            CompanyId = 1,
                            Designation = "Intern",
                            EmployeeeId = "345678",
                            OfficialEmail = "niladri@cts.com",
                            Password = "Niladri@123",
                            PhoneNumber = "9123456789",
                            RoleId = 1,
                            Username = "Niladri"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.VehicleManagement.Models.Vehicle", b =>
                {
                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("BelongsToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InspectedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InspectionByUserId")
                        .HasColumnType("int");

                    b.Property<string>("InspectionStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationNo");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.VehicleManagement.Models.VehicleDetail", b =>
                {
                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("InsuranceCertificateDOCURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsuranceCompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsuranceExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("InsurancedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PUCCertificateNo")
                        .HasColumnType("int");

                    b.Property<string>("PUCDOCURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PUCIssuedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PUCValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("RCDocURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RTOName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistrationExpiresOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RegistrationNo");

                    b.ToTable("VehicleDetails");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.VehicleManagement.Models.VehicleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("FarePerKM")
                        .HasColumnType("int");

                    b.Property<int>("MaxPassengersAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FarePerKM = 13,
                            MaxPassengersAllowed = 7,
                            Type = "SUV"
                        },
                        new
                        {
                            ID = 2,
                            FarePerKM = 12,
                            MaxPassengersAllowed = 4,
                            Type = "Sedan"
                        },
                        new
                        {
                            ID = 3,
                            FarePerKM = 9,
                            MaxPassengersAllowed = 1,
                            Type = "2Wheeler"
                        });
                });

            modelBuilder.Entity("RideSharingPlatform.Authentication.Models.AuthUser", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.UserVerification.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.IncidentManagement.Models.Incident", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.IncidentManagement.Models.IncidentTypes", "IncidentTypes")
                        .WithMany()
                        .HasForeignKey("IncidentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncidentTypes");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.IncidentManagement.Models.InvestigationDetails", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.IncidentManagement.Models.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentsIncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.DrivingLicense", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.UserVerification.Models.UserApplication", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.UserVerification.Models.UserApplication", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.UserVerification.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RideSharingPlatform.Microservices.UserVerification.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RideSharingPlatform.Microservices.VehicleManagement.Models.Vehicle", b =>
                {
                    b.HasOne("RideSharingPlatform.Microservices.VehicleManagement.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });
#pragma warning restore 612, 618
        }
    }
}
