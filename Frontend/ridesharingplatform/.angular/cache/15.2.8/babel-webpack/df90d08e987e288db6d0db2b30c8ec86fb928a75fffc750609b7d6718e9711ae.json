{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction NewapplicationComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction NewapplicationComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter User Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter Password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter Official Email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter Phone Number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter valid phone number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter Designation \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_option_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const company_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", company_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(company_r9.companyName);\n  }\n}\nfunction NewapplicationComponent_div_56_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter Phone Number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_div_56_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Please enter valid phone number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"label\", 10);\n    i0.ɵɵtext(3, \"license Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 28);\n    i0.ɵɵtemplate(5, NewapplicationComponent_div_56_span_5_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(6, NewapplicationComponent_div_56_span_6_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 10);\n    i0.ɵɵtext(9, \"Expiration Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 30);\n    i0.ɵɵtext(13, \"Rta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 30);\n    i0.ɵɵtext(17, \"Allowed Vehicles:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r8.newapplication.get(\"licenseNo\").errors && ctx_r8.newapplication.get(\"licenseNo\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.newapplication.get(\"licenseNo\").hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.newapplication.get(\"licenseNo\").hasError(\"invalidlicenseno\"));\n  }\n}\nexport class NewapplicationComponent {\n  constructor(formBuilder, dataService, router, http) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.http = http;\n    this.companyList = [];\n    this.errorMessage = \"\";\n  }\n  validatePhoneNumber() {\n    return control => {\n      const phoneNumber = control.value;\n      if (phoneNumber && phoneNumber.length !== 10) {\n        return {\n          'phoneNumberInvalid': true\n        };\n      }\n      return null;\n    };\n  }\n  validatelicensenumber() {\n    return control => {\n      const phoneNumber = control.value;\n      const validPhoneNumber = /^[A-Za-z]{3}\\d{4}[A-Za-z]{3}$/; // regular expression for 10 digit phone number\n      return validPhoneNumber.test(phoneNumber) ? null : {\n        invalidlicenseno: true\n      };\n    };\n  }\n  ngOnInit() {\n    this.newapplication = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      officialEmail: new FormControl('', Validators.required),\n      phoneNumber: new FormControl('', [Validators.required, this.validatePhoneNumber()]),\n      designation: new FormControl('', Validators.required),\n      roleId: new FormControl('', Validators.required),\n      employeeeId: new FormControl('', Validators.required),\n      aadharNumber: new FormControl('', Validators.required),\n      applicationStatus: new FormControl('New'),\n      companyId: new FormControl('', Validators.required),\n      licenseNo: new FormControl(null, [this.validatelicensenumber()]),\n      expirationDate: new FormControl(new Date()),\n      rta: new FormControl(),\n      alowedVehicles: new FormControl()\n    });\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe(response => {\n      this.companyList = response;\n    });\n  }\n  // Handler for form submission\n  onSubmit() {\n    // if (this.newapplication.invalid) {\n    //   return;\n    // }\n    console.log(this.newapplication.value);\n    this.dataService.createApplication(this.newapplication.value).subscribe(response => {\n      console.log(response);\n      // show acknowledgement message here\n    }, error => {\n      console.log(error);\n      // show error message here\n    });\n  }\n}\n\nNewapplicationComponent.ɵfac = function NewapplicationComponent_Factory(t) {\n  return new (t || NewapplicationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nNewapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewapplicationComponent,\n  selectors: [[\"app-newapplication\"]],\n  decls: 61,\n  vars: 20,\n  consts: [[1, \"cont\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"officialEmail\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"type\", \"tel\", \"id\", \"designation\", \"formControlName\", \"designation\", 1, \"form-control\"], [\"for\", \"role\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"1\", \"formControlName\", \"roleId\", \"required\", \"\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"2\", \"formControlName\", \"roleId\", \"required\", \"\"], [\"type\", \"tel\", \"id\", \"employeeid\", \"formControlName\", \"employeeeId\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"paadharnumber\", \"formControlName\", \"aadharNumber\", 1, \"form-control\"], [\"for\", \"company\"], [\"id\", \"company\", \"formControlName\", \"companyId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"type\", \"reset\", 1, \"btn\"], [\"type\", \"submit\", 1, \"btn\", 2, \"float\", \"right\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [3, \"value\"], [\"type\", \"tel\", \"id\", \"licenseno\", \"formControlName\", \"licenseNo\", 1, \"form-control\"], [\"type\", \"date\", \"id\", \"expdate\", \"formControlName\", \"expirationDate\", 1, \"form-control\"], [\"for\", \"rta\"], [\"type\", \"text\", \"id\", \"rta\", \"formControlName\", \"rta\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"allowed\", \"formControlName\", \"alowedVehicles\", 1, \"form-control\"]],\n  template: function NewapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"New Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, NewapplicationComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function NewapplicationComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, NewapplicationComponent_span_9_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵtemplate(14, NewapplicationComponent_span_14_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, NewapplicationComponent_span_19_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 10);\n      i0.ɵɵtext(22, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 11);\n      i0.ɵɵtemplate(24, NewapplicationComponent_span_24_Template, 2, 0, \"span\", 6);\n      i0.ɵɵtemplate(25, NewapplicationComponent_span_25_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\", 10);\n      i0.ɵɵtext(28, \"Designation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 12);\n      i0.ɵɵtemplate(30, NewapplicationComponent_span_30_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 3)(32, \"label\", 13);\n      i0.ɵɵtext(33, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\")(35, \"label\");\n      i0.ɵɵelement(36, \"input\", 14);\n      i0.ɵɵtext(37, \" Motorist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"label\");\n      i0.ɵɵelement(39, \"input\", 15);\n      i0.ɵɵtext(40, \" Rider\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 3)(42, \"label\", 10);\n      i0.ɵɵtext(43, \"Employee Id:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 3)(46, \"label\", 10);\n      i0.ɵɵtext(47, \"Aadhar Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 3)(50, \"label\", 18);\n      i0.ɵɵtext(51, \"Company:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"select\", 19)(53, \"option\", 20);\n      i0.ɵɵtext(54, \"Select a company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(55, NewapplicationComponent_option_55_Template, 2, 2, \"option\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(56, NewapplicationComponent_div_56_Template, 19, 4, \"div\", 22);\n      i0.ɵɵelementStart(57, \"button\", 23);\n      i0.ɵɵtext(58, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"button\", 24);\n      i0.ɵɵtext(60, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.newapplication);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"username\").errors && ctx.newapplication.get(\"username\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"username\").hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"password\").errors && ctx.newapplication.get(\"password\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"password\").hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"officialEmail\").errors && ctx.newapplication.get(\"officialEmail\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"officialEmail\").hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"phoneNumber\").errors && ctx.newapplication.get(\"phoneNumber\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"phoneNumber\").hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"phoneNumber\").hasError(\"phoneNumberInvalid\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"designation\").errors && ctx.newapplication.get(\"designation\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"designation\").hasError(\"required\"));\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companyList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"roleId\").value === \"1\");\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  min-width: 300px;\\n  max-width: 400px;\\n  padding: 20px;\\n  margin: 0 auto;\\n  background: rgba(255, 255, 255, 0.3490196078);\\n  box-shadow: 3px 3px 23px -9px rgba(0, 0, 0, 0.86);\\n}\\n\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: 1px solid #eee;\\n  border-radius: 0 !important;\\n  padding: 5px 8px;\\n  color: #444;\\n}\\n\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  color: #555;\\n  background: rgba(255, 255, 255, 0.6784313725);\\n  border: 1px solid #fff !important;\\n  margin-top: 20px;\\n  border-radius: 0px Important;\\n}\\n\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background: #fff !important;\\n}\\n\\n.pull-right[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.cont[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  background: #70e1f5;\\n  background: linear-gradient(to right, #ffd194, #70e1f5);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvVXNlclZlcmlmaWNhdGlvbi9uZXdhcHBsaWNhdGlvbi9uZXdhcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLDZDQUFBO0VBR0EsaURBQUE7QUFDSjs7QUFFRTtFQUNFLHNCQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSw2Q0FBQTtFQUNBLGlDQUFBO0VBQ0EsZ0JBQUE7RUFDQSw0QkFBQTtBQUNKOztBQUVFO0VBQ0UsMkJBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUE7QUFDSjs7QUFDRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUVBLHVEQUFBO0FBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICAgIG1pbi13aWR0aDozMDBweDtcclxuICAgIG1heC13aWR0aDo0MDBweDtcclxuICAgIHBhZGRpbmc6MjBweDtcclxuICAgIG1hcmdpbjowIGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiNmZmZmZmY1OTsgXHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDNweCAzcHggMjNweCAtOXB4IHJnYmEoMCwwLDAsMC44Nik7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDNweCAzcHggMjNweCAtOXB4IHJnYmEoMCwwLDAsMC44Nik7XHJcbiAgICBib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsMCwwLDAuODYpO1xyXG4gIH1cclxuICBcclxuICBmb3JtIGlucHV0IHtcclxuICAgIGJvcmRlcjoxcHggc29saWQgI2VlZTtcclxuICAgIGJvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZzo1cHggOHB4O1xyXG4gICAgY29sb3I6IzQ0NDtcclxuICB9XHJcbiAgXHJcbiAgZm9ybSBidXR0b24ge1xyXG4gICAgY29sb3I6IzU1NTtcclxuICAgIGJhY2tncm91bmQ6I2ZmZmZmZmFkO1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjZmZmICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tdG9wOjIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOjBweCBJbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIGZvcm0gYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6I2ZmZiAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAucHVsbC1yaWdodCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICB9XHJcbiAgLmNvbnR7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgYmFja2dyb3VuZDogIzcwZTFmNTtcclxuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmZkMTk0LCAjNzBlMWY1KTsgIFxyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmZkMTk0LCAjNzBlMWY1KTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","NewapplicationComponent","constructor","formBuilder","dataService","router","http","validatePhoneNumber","control","phoneNumber","value","length","validatelicensenumber","validPhoneNumber","test","invalidlicenseno","ngOnInit","newapplication","username","required","password","officialEmail","designation","roleId","employeeeId","aadharNumber","applicationStatus","companyId","licenseNo","expirationDate","Date","rta","alowedVehicles","getCompanies","subscribe","response","companyList","onSubmit","console","log","createApplication","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.ts","D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.html"],"sourcesContent":["\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,FormControl, Validators, NgForm, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-newapplication',\n  templateUrl: './newapplication.component.html',\n  styleUrls: ['./newapplication.component.scss']\n})\nexport class NewapplicationComponent implements OnInit {\n\n  newapplication: FormGroup ;\n  companyList: any[]=[];\n  \n  errorMessage: string=\"\";\n  \n  \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: ApiService,\n    private router: Router,\n    private http: HttpClient\n  ) { }\n\n  validatePhoneNumber():ValidatorFn{\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const phoneNumber = control.value;\n      if (phoneNumber && phoneNumber.length !== 10) {\n        return { 'phoneNumberInvalid': true };\n      }\n      return null;\n    };\n    \n  }\n\n  validatelicensenumber():ValidatorFn{\n    return(control: AbstractControl): { [key: string]:any}|null =>{\n      const phoneNumber = control.value;\n      const validPhoneNumber = /^[A-Za-z]{3}\\d{4}[A-Za-z]{3}$/; // regular expression for 10 digit phone number\n      return validPhoneNumber.test(phoneNumber) ? null : { invalidlicenseno: true };\n    }\n  }\n\n  ngOnInit() {\n    this.newapplication = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('',Validators.required),\n      officialEmail: new FormControl('',Validators.required),\n      phoneNumber: new FormControl('',[Validators.required, this.validatePhoneNumber()]),\n      designation: new FormControl('',Validators.required),\n      roleId: new FormControl('',Validators.required),\n      employeeeId: new FormControl('',Validators.required),\n      aadharNumber: new FormControl('',Validators.required),\n      applicationStatus: new FormControl('New'),\n      companyId: new FormControl('',Validators.required),\n      licenseNo: new FormControl(null,[this.validatelicensenumber()]),\n      expirationDate: new FormControl(new Date),\n      rta: new FormControl(),\n      alowedVehicles: new FormControl(),\n    });\n\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe((response: any[]) => {\n    \n      \n      this.companyList = response;\n      \n    });\n  }\n  \n\n  // Handler for form submission\n  onSubmit(): void {\n    // if (this.newapplication.invalid) {\n    //   return;\n    // }\n    console.log(this.newapplication.value)\n  this.dataService.createApplication(this.newapplication.value).subscribe(response => {\n      console.log(response);\n      // show acknowledgement message here\n    }, error => {\n      console.log(error);\n      // show error message here\n    });\n  \n\n}\n}","<div class=\"cont\">\n<h2>New Application</h2>\n<div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n<form [formGroup]=\"newapplication\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"username\"\n      [class.is-invalid]=\"newapplication.get('username').errors && newapplication.get('username').touched\" required />\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"username\").hasError(\"required\")'>\n      Please enter User Name\n    </span>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Password:</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"password\"\n      [class.is-invalid]=\"newapplication.get('password').errors && newapplication.get('password').touched\" required />\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"password\").hasError(\"required\")'>\n      Please enter Password\n    </span>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"officialEmail\"\n      [class.is-invalid]=\"newapplication.get('officialEmail').errors && newapplication.get('officialEmail').touched\">\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"officialEmail\").hasError(\"required\")'>\n      Please enter Official Email address\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Phone:</label>\n    <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phoneNumber\"\n      [class.is-invalid]=\"newapplication.get('phoneNumber').errors && newapplication.get('phoneNumber').touched\">\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"phoneNumber\").hasError(\"required\")'>\n      Please enter Phone Number\n    </span>\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"phoneNumber\").hasError(\"phoneNumberInvalid\")'>\n      Please enter valid phone number\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Designation:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"designation\" formControlName=\"designation\"\n    [class.is-invalid]=\"newapplication.get('designation').errors && newapplication.get('designation').touched\">\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"designation\").hasError(\"required\")'>\n      Please enter Designation\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"role\">Role:</label>\n    <div>\n      <label><input type=\"radio\" name=\"role\" value=1 formControlName=\"roleId\" required> Motorist</label>\n      <label><input type=\"radio\" name=\"role\" value=2 formControlName=\"roleId\" required> Rider</label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Employee Id:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"employeeid\" formControlName=\"employeeeId\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Aadhar Number:</label>\n    <input type=\"text\" class=\"form-control\" id=\"paadharnumber\" formControlName=\"aadharNumber\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company:</label>\n    <select class=\"form-control\" id=\"company\" formControlName=\"companyId\">\n      <option value=\"\">Select a company</option>\n      <option *ngFor=\"let company of companyList\" [value]=\"company.id\">{{ company.companyName }}</option>\n    </select>\n\n  </div>\n  <div *ngIf=\"newapplication.get('roleId').value==='1'\">\n    <div class=\"form-group\">\n      <label for=\"phone\">license Number:</label>\n      <input type=\"tel\" class=\"form-control\" id=\"licenseno\" formControlName=\"licenseNo\"\n      [class.is-invalid]=\"newapplication.get('licenseNo').errors && newapplication.get('licenseNo').touched\">\n      <span class='invalid-feedback' *ngIf='newapplication.get(\"licenseNo\").hasError(\"required\")'>\n        Please enter Phone Number\n      </span>\n      <span class='invalid-feedback' *ngIf='newapplication.get(\"licenseNo\").hasError(\"invalidlicenseno\")'>\n        Please enter valid phone number\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone\">Expiration Date:</label>\n      <input type=\"date\" class=\"form-control\" id=\"expdate\" formControlName=\"expirationDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Rta:</label>\n      <input type=\"text\" class=\"form-control\" id=\"rta\" formControlName=\"rta\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Allowed Vehicles:</label>\n      <input type=\"text\" class=\"form-control\" id=\"allowed\" formControlName=\"alowedVehicles\">\n    </div>\n  </div>\n  <button type=\"reset\" class=\"btn\">Reset</button>\n  <button type=\"submit\" class=\"btn\" style=\"float:right\">Submit</button>\n</form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}