{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/app.tokenservice\";\nimport * as i3 from \"../Models/model.faredto\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../RideApi.service\";\nimport * as i6 from \"@angular/common\";\nfunction ScheduleRideComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n    i0.ɵɵtext(4, \"Loading....\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ScheduleRideComponent_div_0_div_2_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵlistener(\"click\", function ScheduleRideComponent_div_0_div_2_li_8_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const distance_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.onOptionSelected(distance_r4.id));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const distance_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" From \", distance_r4.from, \" to \", distance_r4.to, \" \");\n  }\n}\nfunction ScheduleRideComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 4);\n    i0.ɵɵtext(2, \"New Application\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function ScheduleRideComponent_div_0_div_2_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"label\", 7);\n    i0.ɵɵtext(6, \"Select Distance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ul\", 8);\n    i0.ɵɵtemplate(8, ScheduleRideComponent_div_0_div_2_li_8_Template, 2, 2, \"li\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 6)(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.newride);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.distances);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.Fare);\n  }\n}\nfunction ScheduleRideComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleRideComponent_div_0_div_1_Template, 5, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, ScheduleRideComponent_div_0_div_2_Template, 12, 3, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoading);\n  }\n}\nexport class ScheduleRideComponent {\n  constructor(http, tokenservice, fdto, formBuilder, apiService, tokenService) {\n    this.http = http;\n    this.tokenservice = tokenservice;\n    this.fdto = fdto;\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.distances = [];\n    this.isLoading = false;\n    this.submitted = false;\n    //fdto:FareDTO;\n    this.Fare = \"kkk\";\n    this.apiUrl = 'https://ridesharingapi.azurewebsites.net/api';\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    {\n      this.apiService.getdistances().subscribe(response => {\n        this.distances = response;\n        //console.log(this.tokenService.getToken());\n      });\n\n      this.newride = new FormGroup({\n        rideFrom: new FormControl('', Validators.required),\n        rideTo: new FormControl('', Validators.required),\n        rideStartsOn: new FormControl(new Date(), Validators.required),\n        rideTime: new FormControl(Validators.required),\n        vehicleRegistrationNo: new FormControl('', Validators.required),\n        motoristUserId: new FormControl(this.tokenService.getid(), Validators.required),\n        noOfSeatsAvailable: new FormControl(Validators.required)\n      });\n    }\n    this.isLoading = false;\n  }\n  onOptionSelected(distanceId) {\n    // const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${this.tokenService.getid()}`, {\n      responseType: 'text'\n    }).subscribe(response => {\n      // Handle the response string\n      console.log(\"ff\" + response);\n      this.r = response;\n      // Process the response further as needed\n    }, error => {\n      // Handle errors\n      console.error(error);\n      return \"\";\n    });\n    // var r=this.apiService.getregno(this.tokenService.getid());\n    // this.fdto.distanceID=distanceId;\n    // console.log(r)\n    //this.fdto=r;\n    // this.Fare = this.getfare(distanceId,this.r);\n    console.log(this.Fare);\n  }\n  getfare(distanceID, vehicleRegistrationNo) {\n    console.log(\"dd\" + distanceID);\n    const params = new HttpParams().set('distanceID', distanceID).set('vehicleRegistrationNo', vehicleRegistrationNo);\n    console.log(params);\n    this.http.get(`${this.apiUrl}/rides/calculatefare`, {\n      params\n    }).subscribe(response => {\n      // Handle the response string\n      console.log(response);\n      this.Fare = response;\n      // Process the response further as needed\n    }, error => {\n      // Handle errors\n      console.error(error);\n    });\n  }\n  onSubmit() {}\n}\nScheduleRideComponent.ɵfac = function ScheduleRideComponent_Factory(t) {\n  return new (t || ScheduleRideComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.FareDTO), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nScheduleRideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleRideComponent,\n  selectors: [[\"app-schedule-ride\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", 2, \"height\", \"100vh\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [1, \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"company\"], [\"id\", \"distance\", 1, \"form-control\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function ScheduleRideComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ScheduleRideComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  min-width: 300px;\\n  max-width: 400px;\\n  padding: 20px;\\n  margin: 0 auto;\\n  background: #70e1f5;\\n  background: linear-gradient(to right, #ffd194, #70e1f5);\\n  box-shadow: 3px 3px 23px -9px rgba(0, 0, 0, 0.86);\\n}\\n\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: 1px solid #eee;\\n  border-radius: 0 !important;\\n  padding: 5px 8px;\\n  color: #444;\\n}\\n\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.pull-right[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.cont[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUmlkZU1hbmFnZW1lbnQvc2NoZWR1bGUtcmlkZS9zY2hlZHVsZS1yaWRlLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vYWNlciUyMHBjL0RvY3VtZW50cy9HaXRIdWIvUmlkZVNoYXJpbmdQbGF0Zm9ybS9Gcm9udGVuZC9yaWRlc2hhcmluZ3BsYXRmb3JtL3NyYy9hcHAvUmlkZU1hbmFnZW1lbnQvc2NoZWR1bGUtcmlkZS9zY2hlZHVsZS1yaWRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFFRix1REFBQTtFQUdFLGlEQUFBO0FDQUo7O0FER0U7RUFDRSxzQkFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FDQUo7O0FER0U7RUFDRSxnQkFBQTtBQ0FKOztBREtFO0VBQ0UsWUFBQTtBQ0ZKOztBRElFO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FDREoiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6MzAwcHg7XHJcbiAgICBtYXgtd2lkdGg6NDAwcHg7XHJcbiAgICBwYWRkaW5nOjIwcHg7XHJcbiAgICBtYXJnaW46MCBhdXRvO1xyXG4gICAgYmFja2dyb3VuZDogIzcwZTFmNTtcclxuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmZDE5NCwgIzcwZTFmNSk7ICBcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmZmQxOTQsICM3MGUxZjUpO1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsMCwwLDAuODYpO1xyXG4gICAgLW1vei1ib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsMCwwLDAuODYpO1xyXG4gICAgYm94LXNoYWRvdzogM3B4IDNweCAyM3B4IC05cHggcmdiYSgwLDAsMCwwLjg2KTtcclxuICB9XHJcbiAgXHJcbiAgZm9ybSBpbnB1dCB7XHJcbiAgICBib3JkZXI6MXB4IHNvbGlkICNlZWU7XHJcbiAgICBib3JkZXItcmFkaXVzOjAgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6NXB4IDhweDtcclxuICAgIGNvbG9yOiM0NDQ7XHJcbiAgfVxyXG4gIFxyXG4gIGZvcm0gYnV0dG9uIHtcclxuICAgIG1hcmdpbi10b3A6MjBweDtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgLnB1bGwtcmlnaHQge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgfVxyXG4gIC5jb250e1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6MHB4O1xyXG4gICAgcmlnaHQ6MHB4O1xyXG4gICAgYm90dG9tOjBweDtcclxuICAgIGxlZnQ6MHB4O1xyXG4gICAgXHJcbiAgfVxyXG4gICAgIiwiZm9ybSB7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kOiAjNzBlMWY1O1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmZDE5NCwgIzcwZTFmNSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmZDE5NCwgIzcwZTFmNSk7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogM3B4IDNweCAyM3B4IC05cHggcmdiYSgwLCAwLCAwLCAwLjg2KTtcbiAgLW1vei1ib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsIDAsIDAsIDAuODYpO1xuICBib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsIDAsIDAsIDAuODYpO1xufVxuXG5mb3JtIGlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VlZTtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiA1cHggOHB4O1xuICBjb2xvcjogIzQ0NDtcbn1cblxuZm9ybSBidXR0b24ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4ucHVsbC1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmNvbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","HttpParams","i0","ScheduleRideComponent","constructor","http","tokenservice","fdto","formBuilder","apiService","tokenService","ngOnInit","isLoading","getdistances","subscribe","response","distances","newride","rideFrom","required","rideTo","rideStartsOn","Date","rideTime","vehicleRegistrationNo","motoristUserId","getid","noOfSeatsAvailable","onOptionSelected","distanceId","get","apiUrl","responseType","console","log","r","error","Fare","getfare","distanceID","params","set","onSubmit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.ts","C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../RideApi.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TokenService } from 'src/app/app.tokenservice';\nimport { FareDTO } from '../Models/model.faredto';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-schedule-ride',\n  templateUrl: './schedule-ride.component.html',\n  styleUrls: ['./schedule-ride.component.scss']\n})\nexport class ScheduleRideComponent implements OnInit{\n\n  distances:any[] = [];\n  isLoading:boolean=false;\n  newride: FormGroup ;\n  submitted:boolean=false;\n  //fdto:FareDTO;\n  Fare:any=\"kkk\";\n  private apiUrl = 'https://ridesharingapi.azurewebsites.net/api'; \n  r:string;\n\n\n  constructor(private http: HttpClient , private tokenservice: TokenService,private fdto:FareDTO, private formBuilder: FormBuilder,private apiService:ApiService,private tokenService:TokenService){}\n\n  ngOnInit(): void {\n    this.isLoading=true;\n{\n    this.apiService.getdistances().subscribe((response: any[]) => {\n    \n      \n      this.distances = response;\n      \n      //console.log(this.tokenService.getToken());\n      \n    });\n\n    this.newride= new FormGroup({\n      rideFrom :new FormControl('',Validators.required),\n      rideTo:new FormControl('',Validators.required),\n      rideStartsOn:new FormControl(new Date(),Validators.required),\n      rideTime:new FormControl(Validators.required),\n      vehicleRegistrationNo:new FormControl('',Validators.required),\n      motoristUserId:new FormControl(this.tokenService.getid(),Validators.required),\n      noOfSeatsAvailable:new FormControl(Validators.required)\n\n\n\n    });\n    }\n    this.isLoading=false;\n  }\n\n  onOptionSelected(distanceId:string){\n    // const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${this.tokenService.getid()}`,{ responseType: 'text' })\n        .subscribe(\n            (response: string) => {\n              // Handle the response string\n              console.log(\"ff\"+response);\n              this.r= response;\n              // Process the response further as needed\n            },\n            \n            (error) => {\n              // Handle errors\n              console.error(error);\n              return \"\";\n            },\n            \n            \n          );\n      // var r=this.apiService.getregno(this.tokenService.getid());\n    \n    // this.fdto.distanceID=distanceId;\n    // console.log(r)\n    //this.fdto=r;\n    \n\n    // this.Fare = this.getfare(distanceId,this.r);\n    console.log(this.Fare);\n\n  }\n\n  getfare(distanceID:string,vehicleRegistrationNo:any) {\n    console.log(\"dd\"+distanceID)\n   const params = new HttpParams()\n.set('distanceID', distanceID)\n.set('vehicleRegistrationNo', vehicleRegistrationNo);\nconsole.log(params);\n    this.http.get<any>(`${this.apiUrl}/rides/calculatefare`,{params},)\n    .subscribe(\n        (response: string) => {\n          // Handle the response string\n          console.log(response);\n          this.Fare= response;\n          // Process the response further as needed\n        },\n        (error) => {\n          // Handle errors\n          console.error(error);\n        }\n      );\n  }\n\n  onSubmit() {}\n\n  \n\n}\n","<div *ngIf=\"!submitted\">\n    <div *ngIf=\"isLoading\">\n        <div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading....</span>\n\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!isLoading\">\n        <h2 class=\"text-center mb-4\">New Application</h2>\n        <!-- <div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">{{ errorMessage }}</div> -->\n        <form [formGroup]=\"newride\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"company\">Select Distance:</label>\n                <ul class=\"form-control\" id=\"distance\">\n                    <!-- <option value=\"\" selected>Select a company</option> -->\n                    <li *ngFor=\"let distance of distances\" (click)=\"onOptionSelected(distance.id)\"> From {{ distance.from }} to {{ distance.to}} </li>\n                </ul>\n\n            </div>\n            <div class=\"form-group\">\n                <p>{{Fare}}</p>\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}