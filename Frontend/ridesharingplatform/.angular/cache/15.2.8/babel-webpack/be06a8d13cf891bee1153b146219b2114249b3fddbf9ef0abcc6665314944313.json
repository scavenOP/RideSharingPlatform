{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction NewapplicationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class NewapplicationComponent {\n  constructor(formBuilder, dataService, router, http) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.http = http;\n    // applicationForm!: FormGroup ;\n    this.companyList = [];\n    this.errorMessage = \"\";\n    this.newapplication = {\n      username: \"\",\n      password: \"\",\n      officialEmail: \"\",\n      phoneNumber: new FormControl('', [Validators.required, Validators.minLength(12), Validators.maxLength(12)]),\n      designation: \"\",\n      roleId: \"\",\n      employeeeId: \"\",\n      aadharNumber: \"\",\n      applicationStatus: \"New\",\n      companyId: 0,\n      licenseNo: null,\n      expirationDate: new Date(),\n      rta: null,\n      alowedVehicles: null\n    };\n  }\n  validatePhoneNumber(control) {\n    const phoneNumber = control.value;\n    if (phoneNumber && phoneNumber.length !== 10) {\n      return {\n        phoneNumberInvalid: true\n      };\n    }\n    return null;\n  }\n  ngOnInit() {\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe(response => {\n      this.companyList = response;\n    });\n  }\n  // Handler for form submission\n  onSubmit(form) {\n    // Check if the form is valid\n    // // Send the application data to the API\n    // this.dataService.createApplication(this.applicationForm.value).subscribe((response: any) => {\n    //   // Redirect to acknowledgement page\n    //   this.router.navigateByUrl('/acknowledgement');\n    //});\n    console.log(this.newapplication);\n    this.dataService.createApplication(this.newapplication).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nNewapplicationComponent.ɵfac = function NewapplicationComponent_Factory(t) {\n  return new (t || NewapplicationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nNewapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewapplicationComponent,\n  selectors: [[\"app-newapplication\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"applicationForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"\", \"\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"officialEmail\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"]],\n  template: function NewapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"New Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, NewapplicationComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function NewapplicationComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r1 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r1.value));\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵtext(22, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgForm, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAgCA,WAAW,EAAEC,UAAU,QAAgB,gBAAgB;;;;;;;;;ICDvFC,+BAAqD;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;ADYvE,OAAM,MAAOC,uBAAuB;EAwBlCC,YACUC,WAAwB,EACxBC,WAAuB,EACvBC,MAAc,EACdC,IAAgB;IAHhB,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IA1Bd;IACA,gBAAW,GAAQ,EAAE;IAErB,iBAAY,GAAS,EAAE;IAEvB,mBAAc,GAAG;MACfC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1GC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,iBAAiB,EAAE,KAAK;MACxBC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE,IAAIC,IAAI,EAAE;MAC1BC,GAAG,EAAE,IAAI;MACTC,cAAc,EAAE;KACjB;EAOG;EAEJC,mBAAmB,CAACC,OAAoB;IACtC,MAAMhB,WAAW,GAAGgB,OAAO,CAACC,KAAK;IACjC,IAAIjB,WAAW,IAAIA,WAAW,CAACkB,MAAM,KAAK,EAAE,EAAE;MAC5C,OAAO;QAAEC,kBAAkB,EAAE;MAAI,CAAE;;IAErC,OAAO,IAAI;EACb;EAEAC,QAAQ;IAGN;IACA,IAAI,CAAC1B,WAAW,CAAC2B,YAAY,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;MAG5D,IAAI,CAACC,WAAW,GAAGD,QAAQ;IAE7B,CAAC,CAAC;EACJ;EAEA;EACAE,QAAQ,CAACC,IAAY;IACnB;IAGA;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,cAAc,CAAC;IAChC,IAAI,CAACnC,WAAW,CAACoC,iBAAiB,CAAC,IAAI,CAACD,cAAc,CAAC,CAACP,SAAS,CAACC,QAAQ,IAAG;MAC3EI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IAEzB,CAAC,EAACQ,KAAK,IAAE;MACLJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB,CAAC,CAAC;EAEJ;;AArEaxC,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAyC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCbpC9C,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MACxBA,wEAA6E;MAC7EA,kCAA6E;MAA7CA;QAAAA;QAAA;QAAA,OAAYA,sCAA+B;MAAA,EAAC;MAC1EA,8BAAwB;MACJA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAsF;MAExFA,iBAAM;MACNA,8BAAwB;MACJA,0BAAS;MAAAA,iBAAQ;MACnCA,4BAA+F;MAEjGA,iBAAM;MACNA,+BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,4BACW;MAEbA,iBAAM;MACNA,+BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,6BAAgF;MAClFA,iBAAM;MAgDNA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MArEzDA,eAAkB;MAAlBA,uCAAkB","names":["FormControl","Validators","i0","NewapplicationComponent","constructor","formBuilder","dataService","router","http","username","password","officialEmail","phoneNumber","required","minLength","maxLength","designation","roleId","employeeeId","aadharNumber","applicationStatus","companyId","licenseNo","expirationDate","Date","rta","alowedVehicles","validatePhoneNumber","control","value","length","phoneNumberInvalid","ngOnInit","getCompanies","subscribe","response","companyList","onSubmit","form","console","log","newapplication","createApplication","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.ts","D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.html"],"sourcesContent":["\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,FormControl, Validators, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-newapplication',\n  templateUrl: './newapplication.component.html',\n  styleUrls: ['./newapplication.component.scss']\n})\nexport class NewapplicationComponent implements OnInit {\n\n  // applicationForm!: FormGroup ;\n  companyList: any[]=[];\n  \n  errorMessage: string=\"\";\n  \n  newapplication = {\n    username: \"\",\n    password: \"\",\n    officialEmail: \"\",\n    phoneNumber: new FormControl('',[Validators.required, Validators.minLength(12), Validators.maxLength(12)]),\n    designation: \"\",\n    roleId: \"\",\n    employeeeId: \"\",\n    aadharNumber: \"\",\n    applicationStatus: \"New\",\n    companyId: 0,\n    licenseNo: null,\n    expirationDate: new Date(),\n    rta: null,\n    alowedVehicles: null\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: ApiService,\n    private router: Router,\n    private http: HttpClient\n  ) { }\n\n  validatePhoneNumber(control: FormControl) {\n    const phoneNumber = control.value;\n    if (phoneNumber && phoneNumber.length !== 10) {\n      return { phoneNumberInvalid: true };\n    }\n    return null;\n  }\n\n  ngOnInit() {\n    \n\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe((response: any[]) => {\n    \n      \n      this.companyList = response;\n      \n    });\n  }\n\n  // Handler for form submission\n  onSubmit(form: NgForm) {\n    // Check if the form is valid\n   \n\n    // // Send the application data to the API\n    // this.dataService.createApplication(this.applicationForm.value).subscribe((response: any) => {\n    //   // Redirect to acknowledgement page\n    //   this.router.navigateByUrl('/acknowledgement');\n    //});\n    console.log(this.newapplication);\n    this.dataService.createApplication(this.newapplication).subscribe(response => {\n      console.log(response);\n    \n  },error=>{\n      console.log(error);\n  });\n\n}\n}","<h2>New Application</h2>\n<div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n<form #applicationForm=\"ngForm\" (ngSubmit)=\"onSubmit(applicationForm.value)\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"username\" required>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"password\" formControlName==\"password\" required>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"officialEmail\"\n      required>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Phone:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"phone\" formControlName=\"phoneNumber\">\n  </div>\n  <!-- <div *ngIf=\"newapplication.phoneNumber.length!=10\" class=\"alert alert-danger\"></div> -->\n  <!-- <div class=\"form-group\">\n    <label for=\"phone\">Designation:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"designation\" [(ngModel)]=\"newapplication.designation\" name=\"designation\">\n    <div *ngIf=\"newapplication.controls['phone'].errors?.['required']\">Phone number is required.</div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"role\">Role:</label>\n    <div>\n      <label><input type=\"radio\" name=\"role\" value=1 [(ngModel)]=\"newapplication.roleId\" name=\"roleid\"> Motorist</label>\n      <label><input type=\"radio\" name=\"role\" value=2 [(ngModel)]=\"newapplication.roleId\" name=\"roleid\"> Rider</label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Employee Id:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"employeeid\" [(ngModel)]=\"newapplication.employeeeId\" name=\"employeeeId\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Aadhar Number:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"paadharnumber\" [(ngModel)]=\"newapplication.aadharNumber\" name=\"aadharNumber\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company:</label>\n    <select class=\"form-control\" id=\"company\" [(ngModel)]=\"newapplication.companyId\" name=\"companyId\">\n      <option value=\"\">Select a company</option>\n      <option *ngFor=\"let company of companyList\" [value]=\"company.id\">{{ company.companyName }}</option>\n    </select>\n\n  </div>\n  <div *ngIf=\"newapplication.roleId==='1'\">\n    <div class=\"form-group\">\n      <label for=\"phone\">license Number:</label>\n      <input type=\"tel\" class=\"form-control\" id=\"licenseno\" [(ngModel)]=\"newapplication.licenseNo\" name=\"licenseNo\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone\">Expiration Date:</label>\n      <input type=\"date\" class=\"form-control\" id=\"expdate\" [(ngModel)]=\"newapplication.expirationDate\" name=\"expirationDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Rta:</label>\n      <input type=\"text\" class=\"form-control\" id=\"rta\" [(ngModel)]=\"newapplication.rta\" name=\"rta\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Allowed Vehicles:</label>\n      <input type=\"text\" class=\"form-control\" id=\"rta\" [(ngModel)]=\"newapplication.alowedVehicles\" name=\"alowedVehicles\">\n    </div> -->\n  <!-- </div> -->\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}