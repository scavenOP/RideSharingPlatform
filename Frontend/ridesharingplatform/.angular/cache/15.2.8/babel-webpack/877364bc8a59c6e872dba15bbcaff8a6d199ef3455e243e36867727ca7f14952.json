{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../UserVerification/newapplication/api.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction NavComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class NavComponent {\n  constructor(formBuilder, loginService) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.loginService.login(email, password).subscribe(response => {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('username', response.name);\n      // close the modal on successful login\n      document.getElementById('closeModal').click();\n    }, error => {\n      this.errorMessage = error.message;\n    });\n  }\n}\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n};\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  decls: 40,\n  vars: 2,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\", \"mb-2\", \"mb-lg-0\"], [1, \"nav-item\", \"active\"], [\"routerLink\", \"/\", 1, \"nav-link\"], [1, \"nav-item\"], [\"routerLink\", \"/new-application\", 1, \"nav-link\"], [\"routerLink\", \"/application-requests\", 1, \"nav-link\"], [1, \"navbar-nav\", \"mnavbar-right\", 2, \"margin-right\", \"2vw\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#loginModal\", 1, \"btn\", \"btn-primary\"], [\"id\", \"loginModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"loginModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"loginModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"emailInput\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"emailInput\", \"formControlName\", \"email\", \"placeholder\", \"Enter email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"passwordInput\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"passwordInput\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"RideSharingPlatform\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ul\", 5)(7, \"li\", 6)(8, \"a\", 7);\n      i0.ɵɵtext(9, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"li\", 8)(11, \"a\", 9);\n      i0.ɵɵtext(12, \"New Application\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"li\", 8)(14, \"a\", 10);\n      i0.ɵɵtext(15, \"Application Requests\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"ul\", 11)(17, \"li\", 8)(18, \"button\", 12);\n      i0.ɵɵtext(19, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 14)(22, \"div\", 15)(23, \"div\", 16)(24, \"h5\", 17);\n      i0.ɵɵtext(25, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"button\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 19)(28, \"form\", 20);\n      i0.ɵɵlistener(\"ngSubmit\", function NavComponent_Template_form_ngSubmit_28_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(29, \"div\", 21)(30, \"label\", 22);\n      i0.ɵɵtext(31, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 21)(34, \"label\", 24);\n      i0.ɵɵtext(35, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, NavComponent_div_37_Template, 2, 1, \"div\", 26);\n      i0.ɵɵelementStart(38, \"button\", 27);\n      i0.ɵɵtext(39, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICwCvDC,+BAA8C;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;ADhC5E,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,WAAwB,EAAUC,YAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,iBAAY,GAAZC,YAAY;EAAgB;EAElFC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQ;IACN,MAAMJ,KAAK,GAAG,IAAI,CAACF,SAAS,CAACO,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK;IACpD,MAAMJ,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACO,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK;IAC1D,IAAI,CAACV,YAAY,CAACW,KAAK,CAACP,KAAK,EAAEE,QAAQ,CAAC,CAACM,SAAS,CAChDC,QAAQ,IAAG;MACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,KAAK,CAAC;MAC7CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAACI,IAAI,CAAC;MAC/C;MACAC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,EAAE;IAC/C,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,OAAO;IACnC,CAAC,CACF;EACH;;AA3BW1B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBhC,8BAAyD;MACpBA,mCAAmB;MAAAA,iBAAI;MACxDA,iCAA4K;MAC1KA,0BAAyC;MAC3CA,iBAAS;MACTA,8BAAqD;MAGZA,oBAAI;MAAAA,iBAAI;MAE7CA,8BAAqB;MAC+BA,gCAAe;MAAAA,iBAAI;MAEvEA,8BAAqB;MACoCA,qCAAoB;MAAAA,iBAAI;MAGnFA,+BAAgE;MAEwBA,sBAAK;MAAAA,iBAAS;MAK1GA,gCAA2G;MAItDA,sBAAK;MAAAA,iBAAK;MACvDA,8BAA4F;MAC9FA,iBAAM;MACNA,gCAAwB;MACQA;QAAA,OAAYiC,cAAU;MAAA,EAAC;MACnDjC,gCAAkB;MAC2BA,8BAAa;MAAAA,iBAAQ;MAChEA,6BAAoH;MACtHA,iBAAM;MACNA,gCAAkB;MAC8BA,yBAAQ;MAAAA,iBAAQ;MAC9DA,6BAA2H;MAC7HA,iBAAM;MACNA,gEAAsE;MACtEA,mCAA8C;MAAAA,sBAAK;MAAAA,iBAAS;;;MAVxDA,gBAAuB;MAAvBA,yCAAuB;MASrBA,eAAkB;MAAlBA,uCAAkB","names":["Validators","i0","NavComponent","constructor","formBuilder","loginService","ngOnInit","loginForm","group","email","required","password","minLength","onSubmit","controls","value","login","subscribe","response","localStorage","setItem","token","name","document","getElementById","click","error","errorMessage","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\nav\\nav.component.ts","D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\nav\\nav.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../UserVerification/newapplication/api.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  loginForm: FormGroup;\n  errorMessage: string;\n\n  constructor(private formBuilder: FormBuilder, private loginService: ApiService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.loginService.login(email, password).subscribe(\n      response => {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('username', response.name);\n        // close the modal on successful login\n        document.getElementById('closeModal').click();\n      },\n      error => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">RideSharingPlatform</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/new-application\">New Application</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/application-requests\">Application Requests</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav mnavbar-right\" style=\"margin-right: 2vw;\">\n        <li class=\"nav-item\">\n          <button class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#loginModal\">Login</button>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" aria-labelledby=\"loginModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"loginModalLabel\">Login</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n              <label for=\"emailInput\" class=\"form-label\">Email address</label>\n              <input type=\"email\" class=\"form-control\" id=\"emailInput\" formControlName=\"email\" placeholder=\"Enter email\" required>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"passwordInput\" class=\"form-label\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"passwordInput\" formControlName=\"password\" placeholder=\"Password\"  required>\n            </div>\n            <div *ngIf=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}