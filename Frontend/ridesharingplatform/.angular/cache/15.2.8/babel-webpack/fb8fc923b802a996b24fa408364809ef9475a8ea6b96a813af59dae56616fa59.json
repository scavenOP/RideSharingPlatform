{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction NewapplicationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction NewapplicationComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter User Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter valid phone number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewapplicationComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const company_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", company_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(company_r5.companyName);\n  }\n}\nfunction NewapplicationComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"label\", 8);\n    i0.ɵɵtext(3, \"license Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 8);\n    i0.ɵɵtext(7, \"Expiration Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 27);\n    i0.ɵɵtext(11, \"Rta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 27);\n    i0.ɵɵtext(15, \"Allowed Vehicles:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 29);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NewapplicationComponent {\n  constructor(formBuilder, dataService, router, http) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.http = http;\n    this.companyList = [];\n    this.errorMessage = \"\";\n  }\n  validatePhoneNumber(control) {\n    const phoneNumber = control.value;\n    return control => {\n      return phoneNumber.length !== 10 ? null : {\n        isValid: true\n      };\n    };\n  }\n  ngOnInit() {\n    this.newapplication = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      officialEmail: new FormControl('', Validators.required),\n      phoneNumber: new FormControl('', [Validators.required, this.validatePhoneNumber]),\n      designation: new FormControl('', Validators.required),\n      roleId: new FormControl('', Validators.required),\n      employeeeId: new FormControl('', Validators.required),\n      aadharNumber: new FormControl('', Validators.required),\n      applicationStatus: new FormControl('new'),\n      companyId: new FormControl('', Validators.required),\n      licenseNo: new FormControl(),\n      expirationDate: new FormControl(new Date()),\n      rta: new FormControl(),\n      alowedVehicles: new FormControl()\n    });\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe(response => {\n      this.companyList = response;\n    });\n  }\n  // Handler for form submission\n  onSubmit() {\n    if (this.newapplication.invalid) {\n      return;\n    }\n    console.log(this.newapplication.value);\n    // this.dataService.createApplication(this.newapplication.value).subscribe(response => {\n    //     console.log(response);\n    //     // show acknowledgement message here\n    //   }, error => {\n    //     console.log(error);\n    //     // show error message here\n    //   });\n  }\n}\n\nNewapplicationComponent.ɵfac = function NewapplicationComponent_Factory(t) {\n  return new (t || NewapplicationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nNewapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewapplicationComponent,\n  selectors: [[\"app-newapplication\"]],\n  decls: 50,\n  vars: 10,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"officialEmail\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"type\", \"tel\", \"id\", \"designation\", \"formControlName\", \"designation\", 1, \"form-control\"], [\"for\", \"role\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"1\", \"formControlName\", \"roleId\"], [\"type\", \"radio\", \"name\", \"role\", \"value\", \"2\", \"formControlName\", \"roleId\"], [\"type\", \"tel\", \"id\", \"employeeid\", \"formControlName\", \"employeeeId\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"paadharnumber\", \"formControlName\", \"aadharNumber\", 1, \"form-control\"], [\"for\", \"company\"], [\"id\", \"company\", \"formControlName\", \"companyId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [3, \"value\"], [\"type\", \"tel\", \"id\", \"licenseno\", \"formControlName\", \"licenseNo\", 1, \"form-control\"], [\"type\", \"date\", \"id\", \"expdate\", \"formControlName\", \"expirationDate\", 1, \"form-control\"], [\"for\", \"rta\"], [\"type\", \"text\", \"id\", \"rta\", \"formControlName\", \"rta\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"allowed\", \"formControlName\", \"alowedVehicles\", 1, \"form-control\"]],\n  template: function NewapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"New Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, NewapplicationComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function NewapplicationComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, NewapplicationComponent_span_8_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, NewapplicationComponent_span_17_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 8);\n      i0.ɵɵtext(20, \"Designation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\")(26, \"label\");\n      i0.ɵɵelement(27, \"input\", 12);\n      i0.ɵɵtext(28, \" Motorist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"label\");\n      i0.ɵɵelement(30, \"input\", 13);\n      i0.ɵɵtext(31, \" Rider\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 2)(33, \"label\", 8);\n      i0.ɵɵtext(34, \"Employee Id:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 2)(37, \"label\", 8);\n      i0.ɵɵtext(38, \"Aadhar Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 2)(41, \"label\", 16);\n      i0.ɵɵtext(42, \"Company:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"select\", 17)(44, \"option\", 18);\n      i0.ɵɵtext(45, \"Select a company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(46, NewapplicationComponent_option_46_Template, 2, 2, \"option\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(47, NewapplicationComponent_div_47_Template, 17, 0, \"div\", 20);\n      i0.ɵɵelementStart(48, \"button\", 21);\n      i0.ɵɵtext(49, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.newapplication);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"username\").errors && ctx.newapplication.get(\"username\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"username\").hasError(\"required\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.newapplication.get(\"phoneNumber\").errors && ctx.newapplication.get(\"phoneNumber\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"phoneNumber\").hasError(\"validatePhoneNumber\"));\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companyList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newapplication.get(\"roleId\").value === \"1\");\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","NewapplicationComponent","constructor","formBuilder","dataService","router","http","validatePhoneNumber","control","phoneNumber","value","length","isValid","ngOnInit","newapplication","username","required","password","officialEmail","designation","roleId","employeeeId","aadharNumber","applicationStatus","companyId","licenseNo","expirationDate","Date","rta","alowedVehicles","getCompanies","subscribe","response","companyList","onSubmit","invalid","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.ts","D:\\projects\\ridesharingplatform\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.html"],"sourcesContent":["\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,FormControl, Validators, NgForm, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-newapplication',\n  templateUrl: './newapplication.component.html',\n  styleUrls: ['./newapplication.component.scss']\n})\nexport class NewapplicationComponent implements OnInit {\n\n  newapplication: FormGroup ;\n  companyList: any[]=[];\n  \n  errorMessage: string=\"\";\n  \n  \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: ApiService,\n    private router: Router,\n    private http: HttpClient\n  ) { }\n\n  validatePhoneNumber(control: FormControl):ValidatorFn{\n    const phoneNumber = control.value;\n    return(control:AbstractControl)=>{\n      return phoneNumber.length!==10?null:{isValid:true}\n    }\n  }\n\n  ngOnInit() {\n    this.newapplication = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('',Validators.required),\n      officialEmail: new FormControl('',Validators.required),\n      phoneNumber: new FormControl('',[Validators.required, this.validatePhoneNumber]),\n      designation: new FormControl('',Validators.required),\n      roleId: new FormControl('',Validators.required),\n      employeeeId: new FormControl('',Validators.required),\n      aadharNumber: new FormControl('',Validators.required),\n      applicationStatus: new FormControl('new'),\n      companyId: new FormControl('',Validators.required),\n      licenseNo: new FormControl(),\n      expirationDate: new FormControl(new Date),\n      rta: new FormControl(),\n      alowedVehicles: new FormControl(),\n    });\n\n    // Fetch the list of companies from the API\n    this.dataService.getCompanies().subscribe((response: any[]) => {\n    \n      \n      this.companyList = response;\n      \n    });\n  }\n  \n\n  // Handler for form submission\n  onSubmit(): void {\n    if (this.newapplication.invalid) {\n      return;\n    }\n    console.log(this.newapplication.value)\n  // this.dataService.createApplication(this.newapplication.value).subscribe(response => {\n  //     console.log(response);\n  //     // show acknowledgement message here\n  //   }, error => {\n  //     console.log(error);\n  //     // show error message here\n  //   });\n  \n\n}\n}","<h2>New Application</h2>\n<div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n<form [formGroup]=\"newapplication\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"username\" \n    [class.is-invalid]=\"newapplication.get('username').errors && newapplication.get('username').touched\"\n    required />\n    <span class='invalid-feedback' *ngIf='newapplication.get(\"username\").hasError(\"required\")'>\n      Please enter User Name\n    </span>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"officialEmail\"\n      required>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Phone:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"phone\" formControlName=\"phoneNumber\" [class.is-invalid]=\"newapplication.get('phoneNumber').errors && newapplication.get('phoneNumber').touched\">\n  </div>\n  <span class='invalid-feedback' *ngIf='newapplication.get(\"phoneNumber\").hasError(\"validatePhoneNumber\")'>\n    Please enter valid phone number\n  </span>\n  <div class=\"form-group\">\n    <label for=\"phone\">Designation:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"designation\" formControlName=\"designation\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"role\">Role:</label>\n    <div>\n      <label><input type=\"radio\" name=\"role\" value=1 formControlName=\"roleId\"> Motorist</label>\n      <label><input type=\"radio\" name=\"role\" value=2 formControlName=\"roleId\"> Rider</label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Employee Id:</label>\n    <input type=\"tel\" class=\"form-control\" id=\"employeeid\" formControlName=\"employeeeId\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"phone\">Aadhar Number:</label>\n    <input type=\"text\" class=\"form-control\" id=\"paadharnumber\" formControlName=\"aadharNumber\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company:</label>\n    <select class=\"form-control\" id=\"company\" formControlName=\"companyId\">\n      <option value=\"\">Select a company</option>\n      <option *ngFor=\"let company of companyList\" [value]=\"company.id\">{{ company.companyName }}</option>\n    </select>\n\n  </div>\n  <div *ngIf=\"newapplication.get('roleId').value==='1'\">\n    <div class=\"form-group\">\n      <label for=\"phone\">license Number:</label>\n      <input type=\"tel\" class=\"form-control\" id=\"licenseno\" formControlName=\"licenseNo\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone\">Expiration Date:</label>\n      <input type=\"date\" class=\"form-control\" id=\"expdate\" formControlName=\"expirationDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Rta:</label>\n      <input type=\"text\" class=\"form-control\" id=\"rta\" formControlName=\"rta\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rta\">Allowed Vehicles:</label>\n      <input type=\"text\" class=\"form-control\" id=\"allowed\" formControlName=\"alowedVehicles\">\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}