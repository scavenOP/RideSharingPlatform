{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet NavComponent = class NavComponent {\n  constructor(formBuilder, loginService, tokenservice) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.tokenservice = tokenservice;\n    this.currentUser = '';\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  isLoggedIn() {\n    return this.tokenservice.getToken() !== null;\n  }\n  logout() {\n    this.tokenservice.setToken(null);\n    this.currentUser = '';\n  }\n  onSubmit() {\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.loginService.login(email, password).subscribe(response => {\n      // localStorage.setItem('token', response.token);\n      // localStorage.setItem('username', response.name);\n      // close the modal on successful login\n      console.log(response.token);\n      this.currentUser = response.name;\n      document.getElementById('closeModal').click();\n    }, error => {\n      this.errorMessage = error.message;\n      console.log(error);\n    });\n  }\n};\nNavComponent = __decorate([Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})], NavComponent);\nexport { NavComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,WAAwB,EAAUC,YAAwB,EAASC,YAA0B;IAA7F,gBAAW,GAAXF,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAAqB,iBAAY,GAAZC,YAAY;IAFnG,gBAAW,GAAW,EAAE;EAE6F;EAErHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,UAAU;IACR,OAAO,IAAI,CAACR,YAAY,CAACS,QAAQ,EAAE,KAAK,IAAI;EAC9C;EACAC,MAAM;IACJ,IAAI,CAACV,YAAY,CAACW,QAAQ,CAAC,IAAI,CAAC;IAChC,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EACAC,QAAQ;IACN,MAAMT,KAAK,GAAG,IAAI,CAACF,SAAS,CAACY,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK;IACpD,MAAMT,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACY,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK;IAC1D,IAAI,CAAChB,YAAY,CAACiB,KAAK,CAACZ,KAAK,EAAEE,QAAQ,CAAC,CAACW,SAAS,CAChDC,QAAQ,IAAG;MACT;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,KAAK,CAAC;MAC3B,IAAI,CAACT,WAAW,GAACM,QAAQ,CAACI,IAAI;MAC9BC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,EAAE;IAC/C,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,OAAO;MACjCT,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CACF;EACH;CAGD;AAzCY9B,YAAY,eALxBF,SAAS,CAAC;EACTmC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWnC,YAAY,CAyCxB;SAzCYA,YAAY","names":["Component","Validators","NavComponent","constructor","formBuilder","loginService","tokenservice","ngOnInit","loginForm","group","email","required","password","minLength","isLoggedIn","getToken","logout","setToken","currentUser","onSubmit","controls","value","login","subscribe","response","console","log","token","name","document","getElementById","click","error","errorMessage","message","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\RideSharingPlatform\\RideSharingPlatform-main\\Frontend\\ridesharingplatform\\src\\app\\nav\\nav.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../UserVerification/newapplication/api.service';\nimport { TokenService } from '../app.tokenservice';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  loginForm: FormGroup;\n  errorMessage: string;\n  currentUser: string = '';\n\n  constructor(private formBuilder: FormBuilder, private loginService: ApiService,private tokenservice: TokenService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  isLoggedIn(): boolean {\n    return this.tokenservice.getToken() !== null;\n  }\n  logout(): void {\n    this.tokenservice.setToken(null);\n    this.currentUser = '';\n  }\n  onSubmit() {\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.loginService.login(email, password).subscribe(\n      response => {\n        // localStorage.setItem('token', response.token);\n        // localStorage.setItem('username', response.name);\n        // close the modal on successful login\n        console.log(response.token);\n        this.currentUser=response.name;\n        document.getElementById('closeModal').click();\n      },\n      error => {\n        this.errorMessage = error.message;\n        console.log(error);\n      }\n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}