{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/app.tokenservice\";\nimport * as i3 from \"../Models/model.faredto\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../RideApi.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../loading/loading.component\";\nfunction ScheduleRideComponent_div_0_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const distance_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", distance_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" From \", distance_r5.from, \" to \", distance_r5.to, \" \");\n  }\n}\nfunction ScheduleRideComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"app-loading\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ScheduleRideComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.Fare);\n  }\n}\nfunction ScheduleRideComponent_div_0_div_14_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" Please enter Start Date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ScheduleRideComponent_div_0_div_14_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" Please enter Start time \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ScheduleRideComponent_div_0_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"label\", 10);\n    i0.ɵɵtext(3, \"Ride Starts On:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵtemplate(5, ScheduleRideComponent_div_0_div_14_span_5_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 10);\n    i0.ɵɵtext(8, \"Ride Starts On:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 13);\n    i0.ɵɵtemplate(10, ScheduleRideComponent_div_0_div_14_span_10_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.newride.get(\"rideStartsOn\").errors && ctx_r4.newride.get(\"rideStartsOn\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newride.get(\"rideStartsOn\").hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.newride.get(\"rideTime\").errors && ctx_r4.newride.get(\"rideTime\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newride.get(\"rideTime\").hasError(\"required\"));\n  }\n}\nfunction ScheduleRideComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"h2\", 1);\n    i0.ɵɵtext(3, \"New Application\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function ScheduleRideComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Select Distance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 5);\n    i0.ɵɵlistener(\"change\", function ScheduleRideComponent_div_0_Template_select_change_8_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onOptionSelected($event));\n    });\n    i0.ɵɵelementStart(9, \"option\", 6);\n    i0.ɵɵtext(10, \"Select a Distance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, ScheduleRideComponent_div_0_option_11_Template, 2, 3, \"option\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, ScheduleRideComponent_div_0_div_12_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(13, ScheduleRideComponent_div_0_div_13_Template, 3, 1, \"div\", 8);\n    i0.ɵɵtemplate(14, ScheduleRideComponent_div_0_div_14_Template, 11, 6, \"div\", 0);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.newride);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.distances);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedDistance);\n  }\n}\nexport class ScheduleRideComponent {\n  constructor(http, tokenservice, fdto, formBuilder, apiService, tokenService) {\n    this.http = http;\n    this.tokenservice = tokenservice;\n    this.fdto = fdto;\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.distances = [];\n    this.isLoading = false;\n    this.submitted = false;\n    this.apiUrl = 'https://ridesharingapi.azurewebsites.net/api';\n    this.selectedDistance = false;\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    {\n      this.apiService.getdistances().subscribe(response => {\n        this.distances = response;\n        //console.log(this.tokenService.getToken());\n      });\n\n      this.newride = new FormGroup({\n        rideFrom: new FormControl('', Validators.required),\n        rideTo: new FormControl('', Validators.required),\n        rideStartsOn: new FormControl(new Date(), Validators.required),\n        rideTime: new FormControl(new Date(), Validators.required),\n        vehicleRegistrationNo: new FormControl('', Validators.required),\n        motoristUserId: new FormControl(this.tokenService.getid(), Validators.required),\n        noOfSeatsAvailable: new FormControl(Validators.required)\n      });\n    }\n    this.isLoading = false;\n  }\n  onOptionSelected(event) {\n    this.isLoading = true;\n    const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${this.tokenService.getid()}`, {\n      responseType: 'text'\n    }).subscribe(response => {\n      // Handle the response string\n      console.log(\"ff\" + response);\n      this.r = response;\n      this.getfare(distanceId, this.r);\n      console.log(this.Fare);\n      this.isLoading = false;\n      this.selectedDistance = true;\n      // Process the response further as needed\n    }, error => {\n      // Handle errors\n      console.error(error);\n      return \"\";\n    });\n    // var r=this.apiService.getregno(this.tokenService.getid());\n    // this.fdto.distanceID=distanceId;\n    // console.log(r)\n    //this.fdto=r;\n  }\n\n  getfare(distanceID, vehicleRegistrationNo) {\n    console.log(\"dd\" + distanceID);\n    const params = new HttpParams().set('distanceID', distanceID).set('vehicleRegistrationNo', vehicleRegistrationNo);\n    console.log(params);\n    this.http.get(`${this.apiUrl}/rides/calculatefare`, {\n      params\n    }).subscribe(response => {\n      // Handle the response string\n      console.log(response);\n      this.Fare = \"Fare : \" + response;\n      // Process the response further as needed\n    }, error => {\n      // Handle errors\n      console.error(error);\n    });\n  }\n  onSubmit() {}\n}\nScheduleRideComponent.ɵfac = function ScheduleRideComponent_Factory(t) {\n  return new (t || ScheduleRideComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.FareDTO), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nScheduleRideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleRideComponent,\n  selectors: [[\"app-schedule-ride\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"company\"], [\"id\", \"distance\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [3, \"value\"], [\"for\", \"name\"], [\"type\", \"date\", \"id\", \"rideStartsOn\", \"formControlName\", \"rideStartsOn\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"time\", \"id\", \"rideTime\", \"formControlName\", \"rideTime\", \"required\", \"\", 1, \"form-control\"], [1, \"invalid-feedback\"]],\n  template: function ScheduleRideComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ScheduleRideComponent_div_0_Template, 15, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i7.LoadingComponent],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  min-width: 300px;\\n  max-width: 400px;\\n  padding: 20px;\\n  margin: 0 auto;\\n  background: #70e1f5;\\n  background: linear-gradient(to right, #ffd194, #70e1f5);\\n  box-shadow: 3px 3px 23px -9px rgba(0, 0, 0, 0.86);\\n}\\n\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: 1px solid #eee;\\n  border-radius: 0 !important;\\n  padding: 5px 8px;\\n  color: #444;\\n}\\n\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.pull-right[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.cont[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n}\\n\\n.custom-loader[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  --c: linear-gradient(#766DF4 0 0);\\n  background: var(--c) 0 0, var(--c) 0 100%, var(--c) 50% 0, var(--c) 50% 100%, var(--c) 100% 0, var(--c) 100% 100%;\\n  background-size: 8px 50%;\\n  background-repeat: no-repeat;\\n  animation: _ngcontent-%COMP%_db7-0 1s infinite;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.custom-loader[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: #766DF4;\\n  top: calc(50% - 4px);\\n  left: -8px;\\n  animation: inherit;\\n  animation-name: _ngcontent-%COMP%_db7-1;\\n}\\n\\n@keyframes _ngcontent-%COMP%_db7-0 {\\n  16.67% {\\n    background-size: 8px 30%, 8px 30%, 8px 50%, 8px 50%, 8px 50%, 8px 50%;\\n  }\\n  33.33% {\\n    background-size: 8px 30%, 8px 30%, 8px 30%, 8px 30%, 8px 50%, 8px 50%;\\n  }\\n  50% {\\n    background-size: 8px 30%, 8px 30%, 8px 30%, 8px 30%, 8px 30%, 8px 30%;\\n  }\\n  66.67% {\\n    background-size: 8px 50%, 8px 50%, 8px 30%, 8px 30%, 8px 30%, 8px 30%;\\n  }\\n  83.33% {\\n    background-size: 8px 50%, 8px 50%, 8px 50%, 8px 50%, 8px 30%, 8px 30%;\\n  }\\n}\\n@keyframes _ngcontent-%COMP%_db7-1 {\\n  20% {\\n    left: 0px;\\n  }\\n  40% {\\n    left: calc(50% - 4px);\\n  }\\n  60% {\\n    left: calc(100% - 8px);\\n  }\\n  80%, 100% {\\n    left: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUmlkZU1hbmFnZW1lbnQvc2NoZWR1bGUtcmlkZS9zY2hlZHVsZS1yaWRlLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vYWNlciUyMHBjL0RvY3VtZW50cy9HaXRIdWIvUmlkZVNoYXJpbmdQbGF0Zm9ybS9Gcm9udGVuZC9yaWRlc2hhcmluZ3BsYXRmb3JtL3NyYy9hcHAvUmlkZU1hbmFnZW1lbnQvc2NoZWR1bGUtcmlkZS9zY2hlZHVsZS1yaWRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFFRix1REFBQTtFQUdFLGlEQUFBO0FDQUo7O0FER0U7RUFDRSxzQkFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FDQUo7O0FER0U7RUFDRSxnQkFBQTtBQ0FKOztBREtFO0VBQ0UsWUFBQTtBQ0ZKOztBRElFO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FDREo7O0FES0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlDQUFBO0VBQ0EsaUhBQ0U7RUFNRix3QkFBQTtFQUNBLDRCQUFBO0VBQ0EsNEJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDUko7O0FEVUU7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0FDUEo7O0FEVUU7RUFDQztJQUFRLHFFQUFBO0VDTlQ7RURPQztJQUFRLHFFQUFBO0VDSlQ7RURLQztJQUFRLHFFQUFBO0VDRlQ7RURHQztJQUFRLHFFQUFBO0VDQVQ7RURDQztJQUFRLHFFQUFBO0VDRVQ7QUFDRjtBREFFO0VBQ0M7SUFBTSxTQUFBO0VDR1A7RURGQztJQUFNLHFCQUFBO0VDS1A7RURKQztJQUFNLHNCQUFBO0VDT1A7RUROQztJQUNNLFVBQUE7RUNRUDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmZvcm0ge1xyXG4gICAgbWluLXdpZHRoOjMwMHB4O1xyXG4gICAgbWF4LXdpZHRoOjQwMHB4O1xyXG4gICAgcGFkZGluZzoyMHB4O1xyXG4gICAgbWFyZ2luOjAgYXV0bztcclxuICAgIGJhY2tncm91bmQ6ICM3MGUxZjU7XHJcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmZmQxOTQsICM3MGUxZjUpOyAgXHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmZkMTk0LCAjNzBlMWY1KTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogM3B4IDNweCAyM3B4IC05cHggcmdiYSgwLDAsMCwwLjg2KTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogM3B4IDNweCAyM3B4IC05cHggcmdiYSgwLDAsMCwwLjg2KTtcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggMjNweCAtOXB4IHJnYmEoMCwwLDAsMC44Nik7XHJcbiAgfVxyXG4gIFxyXG4gIGZvcm0gaW5wdXQge1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjZWVlO1xyXG4gICAgYm9yZGVyLXJhZGl1czowICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOjVweCA4cHg7XHJcbiAgICBjb2xvcjojNDQ0O1xyXG4gIH1cclxuICBcclxuICBmb3JtIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOjIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIFxyXG4gIC5wdWxsLXJpZ2h0IHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gIH1cclxuICAuY29udHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOjBweDtcclxuICAgIHJpZ2h0OjBweDtcclxuICAgIGJvdHRvbTowcHg7XHJcbiAgICBsZWZ0OjBweDtcclxuICAgIFxyXG4gIH1cclxuICAgIFxyXG4gIC5jdXN0b20tbG9hZGVyIHtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgLS1jOiBsaW5lYXItZ3JhZGllbnQoIzc2NkRGNCAwIDApO1xyXG4gICAgYmFja2dyb3VuZDogXHJcbiAgICAgIHZhcigtLWMpIDAgICAgMCxcclxuICAgICAgdmFyKC0tYykgMCAgICAxMDAlLCBcclxuICAgICAgdmFyKC0tYykgNTAlICAwLCAgXHJcbiAgICAgIHZhcigtLWMpIDUwJSAgMTAwJSwgXHJcbiAgICAgIHZhcigtLWMpIDEwMCUgMCwgXHJcbiAgICAgIHZhcigtLWMpIDEwMCUgMTAwJTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogOHB4IDUwJTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBhbmltYXRpb246IGRiNy0wIDFzIGluZmluaXRlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB9XHJcbiAgLmN1c3RvbS1sb2FkZXI6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNzY2REY0O1xyXG4gICAgdG9wOmNhbGMoNTAlIC0gNHB4KTtcclxuICAgIGxlZnQ6LThweDtcclxuICAgIGFuaW1hdGlvbjppbmhlcml0O1xyXG4gICAgYW5pbWF0aW9uLW5hbWU6ZGI3LTE7XHJcbiAgfVxyXG4gIFxyXG4gIEBrZXlmcmFtZXMgZGI3LTAge1xyXG4gICAxNi42NyUge2JhY2tncm91bmQtc2l6ZTo4cHggMzAlLCA4cHggMzAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlfVxyXG4gICAzMy4zMyUge2JhY2tncm91bmQtc2l6ZTo4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggNTAlLCA4cHggNTAlfVxyXG4gICA1MCUgICAge2JhY2tncm91bmQtc2l6ZTo4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlfVxyXG4gICA2Ni42NyUge2JhY2tncm91bmQtc2l6ZTo4cHggNTAlLCA4cHggNTAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlfVxyXG4gICA4My4zMyUge2JhY2tncm91bmQtc2l6ZTo4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggMzAlLCA4cHggMzAlfVxyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIGRiNy0xIHtcclxuICAgMjAlICB7bGVmdDowcHh9XHJcbiAgIDQwJSAge2xlZnQ6Y2FsYyg1MCUgIC0gNHB4KX1cclxuICAgNjAlICB7bGVmdDpjYWxjKDEwMCUgLSA4cHgpfVxyXG4gICA4MCUsXHJcbiAgIDEwMCUge2xlZnQ6MTAwJX1cclxuICB9IiwiZm9ybSB7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kOiAjNzBlMWY1O1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmZDE5NCwgIzcwZTFmNSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmZDE5NCwgIzcwZTFmNSk7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogM3B4IDNweCAyM3B4IC05cHggcmdiYSgwLCAwLCAwLCAwLjg2KTtcbiAgLW1vei1ib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsIDAsIDAsIDAuODYpO1xuICBib3gtc2hhZG93OiAzcHggM3B4IDIzcHggLTlweCByZ2JhKDAsIDAsIDAsIDAuODYpO1xufVxuXG5mb3JtIGlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VlZTtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiA1cHggOHB4O1xuICBjb2xvcjogIzQ0NDtcbn1cblxuZm9ybSBidXR0b24ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4ucHVsbC1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmNvbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4O1xufVxuXG4uY3VzdG9tLWxvYWRlciB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIC0tYzogbGluZWFyLWdyYWRpZW50KCM3NjZERjQgMCAwKTtcbiAgYmFja2dyb3VuZDogdmFyKC0tYykgMCAwLCB2YXIoLS1jKSAwIDEwMCUsIHZhcigtLWMpIDUwJSAwLCB2YXIoLS1jKSA1MCUgMTAwJSwgdmFyKC0tYykgMTAwJSAwLCB2YXIoLS1jKSAxMDAlIDEwMCU7XG4gIGJhY2tncm91bmQtc2l6ZTogOHB4IDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYW5pbWF0aW9uOiBkYjctMCAxcyBpbmZpbml0ZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uY3VzdG9tLWxvYWRlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogOHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICM3NjZERjQ7XG4gIHRvcDogY2FsYyg1MCUgLSA0cHgpO1xuICBsZWZ0OiAtOHB4O1xuICBhbmltYXRpb246IGluaGVyaXQ7XG4gIGFuaW1hdGlvbi1uYW1lOiBkYjctMTtcbn1cblxuQGtleWZyYW1lcyBkYjctMCB7XG4gIDE2LjY3JSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiA4cHggMzAlLCA4cHggMzAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlO1xuICB9XG4gIDMzLjMzJSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggNTAlLCA4cHggNTAlO1xuICB9XG4gIDUwJSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlO1xuICB9XG4gIDY2LjY3JSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiA4cHggNTAlLCA4cHggNTAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlLCA4cHggMzAlO1xuICB9XG4gIDgzLjMzJSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggNTAlLCA4cHggMzAlLCA4cHggMzAlO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGRiNy0xIHtcbiAgMjAlIHtcbiAgICBsZWZ0OiAwcHg7XG4gIH1cbiAgNDAlIHtcbiAgICBsZWZ0OiBjYWxjKDUwJSAtIDRweCk7XG4gIH1cbiAgNjAlIHtcbiAgICBsZWZ0OiBjYWxjKDEwMCUgLSA4cHgpO1xuICB9XG4gIDgwJSwgMTAwJSB7XG4gICAgbGVmdDogMTAwJTtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","HttpParams","i0","ScheduleRideComponent","constructor","http","tokenservice","fdto","formBuilder","apiService","tokenService","ngOnInit","isLoading","getdistances","subscribe","response","distances","newride","rideFrom","required","rideTo","rideStartsOn","Date","rideTime","vehicleRegistrationNo","motoristUserId","getid","noOfSeatsAvailable","onOptionSelected","event","distanceId","target","value","get","apiUrl","responseType","console","log","r","getfare","Fare","selectedDistance","error","distanceID","params","set","onSubmit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.ts","C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../RideApi.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TokenService } from 'src/app/app.tokenservice';\nimport { FareDTO } from '../Models/model.faredto';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-schedule-ride',\n  templateUrl: './schedule-ride.component.html',\n  styleUrls: ['./schedule-ride.component.scss']\n})\nexport class ScheduleRideComponent implements OnInit{\n\n  distances:any[] = [];\n  isLoading:boolean=false;\n  newride: FormGroup ;\n  submitted:boolean=false;\n  //fdto:FareDTO;\n  Fare:string;\n  private apiUrl = 'https://ridesharingapi.azurewebsites.net/api'; \n  r:string;\n  selectedDistance:boolean=false;\n\n\n  constructor(private http: HttpClient , private tokenservice: TokenService,private fdto:FareDTO, private formBuilder: FormBuilder,private apiService:ApiService,private tokenService:TokenService){}\n\n  ngOnInit(): void {\n    this.isLoading=true;\n{\n    this.apiService.getdistances().subscribe((response: any[]) => {\n    \n      \n      this.distances = response;\n      \n      //console.log(this.tokenService.getToken());\n      \n    });\n\n    this.newride= new FormGroup({\n      rideFrom :new FormControl('',Validators.required),\n      rideTo:new FormControl('',Validators.required),\n      rideStartsOn:new FormControl(new Date,Validators.required),\n      rideTime:new FormControl(new Date(),Validators.required),\n      vehicleRegistrationNo:new FormControl('',Validators.required),\n      motoristUserId:new FormControl(this.tokenService.getid(),Validators.required),\n      noOfSeatsAvailable:new FormControl(Validators.required)\n\n\n\n    });\n    }\n    this.isLoading=false;\n  }\n\n  onOptionSelected(event:any){\n    this.isLoading=true;\n    const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${this.tokenService.getid()}`,{ responseType: 'text' })\n        .subscribe(\n            (response: string) => {\n              // Handle the response string\n              console.log(\"ff\"+response);\n              this.r= response;\n              this.getfare(distanceId,this.r);\n    console.log(this.Fare);\n    this.isLoading=false;\n    this.selectedDistance=true;\n              // Process the response further as needed\n            },\n            \n            (error) => {\n              // Handle errors\n              console.error(error);\n              return \"\";\n            },\n            \n            \n          );\n      // var r=this.apiService.getregno(this.tokenService.getid());\n    \n    // this.fdto.distanceID=distanceId;\n    // console.log(r)\n    //this.fdto=r;\n    \n\n    \n\n  }\n\n  getfare(distanceID:string,vehicleRegistrationNo:any) {\n    console.log(\"dd\"+distanceID)\n   const params = new HttpParams()\n.set('distanceID', distanceID)\n.set('vehicleRegistrationNo', vehicleRegistrationNo);\nconsole.log(params);\n    this.http.get<any>(`${this.apiUrl}/rides/calculatefare`,{params},)\n    .subscribe(\n        (response: string) => {\n          // Handle the response string\n          console.log(response);\n          this.Fare= \"Fare : \"+response;\n          // Process the response further as needed\n        },\n        (error) => {\n          // Handle errors\n          console.error(error);\n        }\n      );\n  }\n\n  onSubmit() {}\n\n  \n\n}\n","<div *ngIf=\"!submitted\">\n    <!-- <div *ngIf=\"isLoading\">\n        <div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading....</span>\n\n            </div>\n        </div>\n    </div> -->\n    <div>\n        <h2 class=\"text-center mb-4\">New Application</h2>\n        <!-- <div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">{{ errorMessage }}</div> -->\n        <form [formGroup]=\"newride\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"company\">Select Distance:</label>\n                <select class=\"form-control\" id=\"distance\" (change)=\"onOptionSelected($event)\">\n                    <option value=\"\" selected>Select a Distance</option>\n                    <option *ngFor=\"let distance of distances\" [value]=\"distance.id\"> From {{ distance.from }} to {{\n                        distance.to}} </option>\n                </select>\n\n\n            </div>\n\n            <div *ngIf=\"isLoading\" class=\"form-group\">\n                <app-loading></app-loading>\n            </div>\n\n\n            <div *ngIf=\"!isLoading\" class=\"form-group\">\n                <p>{{Fare}}</p>\n                </div>\n                <div *ngIf=\"selectedDistance\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Ride Starts On:</label>\n                        <input type=\"date\" class=\"form-control\" id=\"rideStartsOn\" formControlName=\"rideStartsOn\"\n                            [class.is-invalid]=\"newride.get('rideStartsOn').errors && newride.get('rideStartsOn').touched\"\n                            required />\n                        <span class='invalid-feedback' *ngIf='newride.get(\"rideStartsOn\").hasError(\"required\")'>\n                            Please enter Start Date\n                        </span>\n    \n                    </div>\n    \n                    <div class=\"form-group\">\n                        <label for=\"name\">Ride Starts On:</label>\n                        <input type=\"time\" class=\"form-control\" id=\"rideTime\" formControlName=\"rideTime\"\n                            [class.is-invalid]=\"newride.get('rideTime').errors && newride.get('rideTime').touched\"\n                            required />\n                        <span class='invalid-feedback' *ngIf='newride.get(\"rideTime\").hasError(\"required\")'>\n                            Please enter Start time\n                        </span>\n    \n                    </div>\n\n                </div>\n\n                \n            \n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}