{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./api.service\";\nexport class NewapplicationComponent {\n  constructor(formBuilder, dataService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.applicationForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      role: ['', Validators.required],\n      company: ['', Validators.required],\n      licenseNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.applicationForm.invalid) {\n      return;\n    }\n    this.dataService.createApplication(this.applicationForm.value).subscribe(response => {\n      console.log(response);\n      // show acknowledgement message here\n    }, error => {\n      console.log(error);\n      // show error message here\n    });\n  }\n}\n\nNewapplicationComponent.ɵfac = function NewapplicationComponent_Factory(t) {\n  return new (t || NewapplicationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n};\nNewapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewapplicationComponent,\n  selectors: [[\"app-new-application\"]],\n  decls: 2,\n  vars: 0,\n  template: function NewapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"newapplication works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,WAAwB,EAAUC,WAAuB;IAAzD,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;EAAgB;EAEjFC,QAAQ;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC5CC,SAAS,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,IAAI,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MAC/BI,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MAClCK,aAAa,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ;KACxC,CAAC;EACJ;EAEAM,QAAQ;IACN,IAAI,IAAI,CAACT,eAAe,CAACU,OAAO,EAAE;MAChC;;IAEF,IAAI,CAACZ,WAAW,CAACa,iBAAiB,CAAC,IAAI,CAACX,eAAe,CAACY,KAAK,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MAClFC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;IACF,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;;;AA5BWtB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,yBAAG;MAAAA,qCAAqB;MAAAA,iBAAI","names":["Validators","NewapplicationComponent","constructor","formBuilder","dataService","ngOnInit","applicationForm","group","firstName","required","lastName","email","role","company","licenseNumber","onSubmit","invalid","createApplication","value","subscribe","response","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\projects\\idp\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.ts","D:\\projects\\idp\\Frontend\\ridesharingplatform\\src\\app\\UserVerification\\newapplication\\newapplication.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-new-application',\n  templateUrl: './newapplication.component.html',\n  styleUrls: ['./newapplication.component.css']\n})\nexport class NewapplicationComponent implements OnInit {\n\n  applicationForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private dataService: ApiService) { }\n\n  ngOnInit(): void {\n    this.applicationForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      role: ['', Validators.required],\n      company: ['', Validators.required],\n      licenseNumber: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.applicationForm.invalid) {\n      return;\n    }\n    this.dataService.createApplication(this.applicationForm.value).subscribe(response => {\n      console.log(response);\n      // show acknowledgement message here\n    }, error => {\n      console.log(error);\n      // show error message here\n    });\n  }\n\n}\n","<p>newapplication works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}