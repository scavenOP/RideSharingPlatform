{"ast":null,"code":"import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class NavComponent {\n  constructor(router, formBuilder, loginService, tokenservice) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.tokenservice = tokenservice;\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.loginService.unAuthorisedError.subscribe(() => {\n      this.currentUser = this.tokenservice.getname();\n      this.localservice = this.tokenservice;\n      console.log(\"user\" + this.currentUser);\n    });\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  isLoggedIn() {\n    var r = this.tokenservice.getToken() != null;\n    if (r == true) {\n      this.currentUser = this.tokenservice.getname();\n      //console.log(\"user\"+this.currentUser);\n    }\n\n    return r;\n  }\n  logout() {\n    this.tokenservice.logout();\n    this.router.navigate(['']);\n  }\n}\nNavComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NavComponent,\n  factory: NavComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,SAAuBC,UAAU,QAAQ,eAAe;;AAWxD,OAAM,MAAOC,YAAY;EAQvBC,YAAoBC,MAAc,EAASC,WAAwB,EAAUC,YAAwB,EAASC,YAA0B;IAApH,WAAM,GAANH,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAAqB,iBAAY,GAAZC,YAAY;IAJ1H,cAAS,GAAC,KAAK;EAI6H;EAE5IC,QAAQ;IACN,IAAI,CAACF,YAAY,CAACG,iBAAiB,CAACC,SAAS,CAAC,MAAI;MAChD,IAAI,CAACC,WAAW,GAAC,IAAI,CAACJ,YAAY,CAACK,OAAO,EAAE;MAC5C,IAAI,CAACC,YAAY,GAAC,IAAI,CAACN,YAAY;MACnCO,OAAO,CAACC,GAAG,CAAC,MAAM,GAAC,IAAI,CAACJ,WAAW,CAAC;IAEtC,CAAC,CAAC;IACF,IAAI,CAACK,SAAS,GAAG,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACmB,QAAQ,EAAEnB,UAAU,CAACkB,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACmB,QAAQ,EAAEnB,UAAU,CAACqB,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,UAAU;IACR,IAAIC,CAAC,GAAE,IAAI,CAAChB,YAAY,CAACiB,QAAQ,EAAE,IAAI,IAAI;IAC3C,IAAGD,CAAC,IAAE,IAAI,EAAC;MACX,IAAI,CAACZ,WAAW,GAAC,IAAI,CAACJ,YAAY,CAACK,OAAO,EAAE;MAE1C;;;IAEA,OAAOW,CAAC;EACZ;EACAE,MAAM;IACJ,IAAI,CAAClB,YAAY,CAACkB,MAAM,EAAE;IAC1B,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;AAnCWxB,YAAY;SAAZA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YAPX;AAAM","names":["Component","Validators","Injectable","NavComponent","constructor","router","formBuilder","loginService","tokenservice","ngOnInit","unAuthorisedError","subscribe","currentUser","getname","localservice","console","log","loginForm","group","email","required","password","minLength","isLoggedIn","r","getToken","logout","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\RideSharingPlatform\\RideSharingPlatform-main\\Frontend\\ridesharingplatform\\src\\app\\nav\\nav.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../UserVerification/api.service';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { TokenService } from '../app.tokenservice';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit{\n  loginForm: FormGroup;\n  errorMessage: string;\n  currentUser: string;\n  isLoading=false;\n  currentuserrole:string;\n  localservice:TokenService;\n\n  constructor(private router: Router,private formBuilder: FormBuilder, private loginService: ApiService,private tokenservice: TokenService) { }\n\n  ngOnInit() {\n    this.loginService.unAuthorisedError.subscribe(()=>{\n      this.currentUser=this.tokenservice.getname();\n      this.localservice=this.tokenservice;\n      console.log(\"user\"+this.currentUser);\n      \n    })\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  isLoggedIn(): boolean {\n    var r =this.tokenservice.getToken() != null;\n    if(r==true){\n    this.currentUser=this.tokenservice.getname();\n      \n      //console.log(\"user\"+this.currentUser);\n      }\n      return r;\n  }\n  logout(): void {\n    this.tokenservice.logout();\n    this.router.navigate([''])\n  }\n  // onSubmit() {\n  //   this.isLoading=true;\n  //   const email = this.loginForm.controls['email'].value;\n  //   const password = this.loginForm.controls['password'].value;\n  //   this.loginService.login(email, password).subscribe(\n  //     response => {\n  //       // localStorage.setItem('token', response.token);\n  //       // localStorage.setItem('username', response.name);\n  //       // close the modal on successful login\n  //       console.log(response.token);\n  //       this.tokenservice.setname(response.name);\n  //       this.tokenservice.setToken(response.token);\n  //       this.tokenservice.setRole(response.role;\n  //       this.currentUser=this.tokenservice.getname();\n  //       document.getElementById('closeModal').click();\n  //       this.isLoading=false;\n  //     },\n  //     error => {\n  //       this.errorMessage = error.message;\n  //       console.log(error);\n  //       this.isLoading=false;\n  //     }\n  //   );\n  }\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}