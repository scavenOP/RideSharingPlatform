{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ScheduleRideComponent = class ScheduleRideComponent {\n  constructor(http, tokenservice, fdto, formBuilder, apiService, tokenService) {\n    this.http = http;\n    this.tokenservice = tokenservice;\n    this.fdto = fdto;\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n    this.distances = [];\n    this.isLoading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    {\n      this.apiService.getdistances().subscribe(response => {\n        this.distances = response;\n        //console.log(this.tokenService.getToken());\n      });\n\n      this.newride = new FormGroup({\n        rideFrom: new FormControl('', Validators.required),\n        rideTo: new FormControl('', Validators.required),\n        rideStartsOn: new FormControl(new Date(), Validators.required),\n        rideTime: new FormControl(Validators.required),\n        vehicleRegistrationNo: new FormControl('', Validators.required),\n        motoristUserId: new FormControl(this.tokenService.getid(), Validators.required),\n        noOfSeatsAvailable: new FormControl(Validators.required)\n      });\n    }\n    this.isLoading = false;\n  }\n  onOptionSelected(distanceId) {\n    // const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${id}`, {\n      responseType: 'text'\n    }).subscribe(response => {\n      // Handle the response string\n      console.log(\"ff\" + response);\n      return response;\n      // Process the response further as needed\n    }, error => {\n      // Handle errors\n      console.error(error);\n      return \"\";\n    });\n    var r = this.apiService.getregno(this.tokenService.getid());\n    // this.fdto.distanceID=distanceId;\n    console.log(r);\n    //this.fdto=r;\n    this.Fare = this.apiService.getfare(distanceId, r);\n  }\n  onSubmit() {}\n};\nScheduleRideComponent = __decorate([Component({\n  selector: 'app-schedule-ride',\n  templateUrl: './schedule-ride.component.html',\n  styleUrls: ['./schedule-ride.component.scss']\n})], ScheduleRideComponent);\nexport { ScheduleRideComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAsBC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AASzE,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAUhCC,YAAoBC,IAAgB,EAAWC,YAA0B,EAASC,IAAY,EAAUC,WAAwB,EAASC,UAAqB,EAASC,YAAyB;IAA5K,SAAI,GAAJL,IAAI;IAAuB,iBAAY,GAAZC,YAAY;IAAuB,SAAI,GAAJC,IAAI;IAAkB,gBAAW,GAAXC,WAAW;IAAsB,eAAU,GAAVC,UAAU;IAAoB,iBAAY,GAAZC,YAAY;IARnL,cAAS,GAAS,EAAE;IACpB,cAAS,GAAS,KAAK;IAEvB,cAAS,GAAS,KAAK;EAK2K;EAElMC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI;IACvB;MACI,IAAI,CAACH,UAAU,CAACI,YAAY,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;QAG3D,IAAI,CAACC,SAAS,GAAGD,QAAQ;QAEzB;MAEF,CAAC,CAAC;;MAEF,IAAI,CAACE,OAAO,GAAE,IAAIhB,SAAS,CAAC;QAC1BiB,QAAQ,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACiB,QAAQ,CAAC;QACjDC,MAAM,EAAC,IAAIpB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACiB,QAAQ,CAAC;QAC9CE,YAAY,EAAC,IAAIrB,WAAW,CAAC,IAAIsB,IAAI,EAAE,EAACpB,UAAU,CAACiB,QAAQ,CAAC;QAC5DI,QAAQ,EAAC,IAAIvB,WAAW,CAACE,UAAU,CAACiB,QAAQ,CAAC;QAC7CK,qBAAqB,EAAC,IAAIxB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACiB,QAAQ,CAAC;QAC7DM,cAAc,EAAC,IAAIzB,WAAW,CAAC,IAAI,CAACU,YAAY,CAACgB,KAAK,EAAE,EAACxB,UAAU,CAACiB,QAAQ,CAAC;QAC7EQ,kBAAkB,EAAC,IAAI3B,WAAW,CAACE,UAAU,CAACiB,QAAQ;OAIvD,CAAC;;IAEF,IAAI,CAACP,SAAS,GAAC,KAAK;EACtB;EAEAgB,gBAAgB,CAACC,UAAiB;IAChC;IACA,IAAI,CAACxB,IAAI,CAACyB,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,aAAaC,EAAE,EAAE,EAAC;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAClEnB,SAAS,CACLC,QAAgB,IAAI;MACnB;MACAmB,OAAO,CAACC,GAAG,CAAC,IAAI,GAACpB,QAAQ,CAAC;MAC1B,OAAOA,QAAQ;MACf;IACF,CAAC,EAEAqB,KAAK,IAAI;MACR;MACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,EAAE;IACX,CAAC,CAGF;IACL,IAAIC,CAAC,GAAC,IAAI,CAAC5B,UAAU,CAAC6B,QAAQ,CAAC,IAAI,CAAC5B,YAAY,CAACgB,KAAK,EAAE,CAAC;IAE3D;IACAQ,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;IACd;IAGA,IAAI,CAACE,IAAI,GAAG,IAAI,CAAC9B,UAAU,CAAC+B,OAAO,CAACX,UAAU,EAACQ,CAAC,CAAC;EAEnD;EAEAI,QAAQ,IAAI;CAIb;AA1EYtC,qBAAqB,eALjCJ,SAAS,CAAC;EACT2C,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWzC,qBAAqB,CA0EjC;SA1EYA,qBAAqB","names":["Component","FormControl","FormGroup","Validators","ScheduleRideComponent","constructor","http","tokenservice","fdto","formBuilder","apiService","tokenService","ngOnInit","isLoading","getdistances","subscribe","response","distances","newride","rideFrom","required","rideTo","rideStartsOn","Date","rideTime","vehicleRegistrationNo","motoristUserId","getid","noOfSeatsAvailable","onOptionSelected","distanceId","get","apiUrl","id","responseType","console","log","error","r","getregno","Fare","getfare","onSubmit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\acer pc\\Documents\\GitHub\\RideSharingPlatform\\Frontend\\ridesharingplatform\\src\\app\\RideManagement\\schedule-ride\\schedule-ride.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../RideApi.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TokenService } from 'src/app/app.tokenservice';\nimport { FareDTO } from '../Models/model.faredto';\n\n@Component({\n  selector: 'app-schedule-ride',\n  templateUrl: './schedule-ride.component.html',\n  styleUrls: ['./schedule-ride.component.scss']\n})\nexport class ScheduleRideComponent implements OnInit{\n\n  distances:any[] = [];\n  isLoading:boolean=false;\n  newride: FormGroup ;\n  submitted:boolean=false;\n  //fdto:FareDTO;\n  Fare:any;\n\n\n  constructor(private http: HttpClient , private tokenservice: TokenService,private fdto:FareDTO, private formBuilder: FormBuilder,private apiService:ApiService,private tokenService:TokenService){}\n\n  ngOnInit(): void {\n    this.isLoading=true;\n{\n    this.apiService.getdistances().subscribe((response: any[]) => {\n    \n      \n      this.distances = response;\n      \n      //console.log(this.tokenService.getToken());\n      \n    });\n\n    this.newride= new FormGroup({\n      rideFrom :new FormControl('',Validators.required),\n      rideTo:new FormControl('',Validators.required),\n      rideStartsOn:new FormControl(new Date(),Validators.required),\n      rideTime:new FormControl(Validators.required),\n      vehicleRegistrationNo:new FormControl('',Validators.required),\n      motoristUserId:new FormControl(this.tokenService.getid(),Validators.required),\n      noOfSeatsAvailable:new FormControl(Validators.required)\n\n\n\n    });\n    }\n    this.isLoading=false;\n  }\n\n  onOptionSelected(distanceId:string){\n    // const distanceId = event.target.value;\n    this.http.get(`${this.apiUrl}/GetRegNo/${id}`,{ responseType: 'text' })\n        .subscribe(\n            (response: string) => {\n              // Handle the response string\n              console.log(\"ff\"+response);\n              return response;\n              // Process the response further as needed\n            },\n            \n            (error) => {\n              // Handle errors\n              console.error(error);\n              return \"\";\n            },\n            \n            \n          );\n      var r=this.apiService.getregno(this.tokenService.getid());\n    \n    // this.fdto.distanceID=distanceId;\n    console.log(r)\n    //this.fdto=r;\n    \n\n    this.Fare = this.apiService.getfare(distanceId,r);\n\n  }\n\n  onSubmit() {}\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}